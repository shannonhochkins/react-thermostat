{"mappings":";;;;A;;;AEAO,MAAM8H,yCAAW,GAAG,EAAE,AAA7B;AACO,MAAMC,yCAAS,GAAI,GAAG,AAA7B;AACO,MAAMhH,yCAAiB,GAAG,GAAG,AAApC;AACO,MAAMC,yCAAiB,GAAG,GAAG,AAApC;AACO,MAAMC,yCAAY,GAAG,GAAG,AAA/B;AACO,MAAMC,yCAAa,GAAG,EAAE,AAA/B;;ADLA;AAGO,SAASX,yCAAY,CAACyH,MAI5B,EAAE;IACD,MAAM,SAAEd,KAAK,CAAA,OAAEhE,GAAG,CAAA,OAAEC,GAAAA,CAAAA,EAAK,GAAG6E,MAAM,AAAV;IACxB,IAAId,KAAK,GAAGY,CAAAA,GAAAA,yCAAW,CAAA,EACrB,OAAO5E,GAAG,CAAV;SACK,IAAIgE,KAAK,GAAGa,CAAAA,GAAAA,yCAAS,CAAA,EAC1B,OAAO5E,GAAG,CAAV;SACK;QACL,MAAM8E,KAAK,GAAG,AAACf,CAAAA,KAAK,GAAGY,CAAAA,GAAAA,yCAAW,CAAA,CAAA,GAAKC,CAAAA,CAAAA,GAAAA,yCAAS,CAAA,GAAGD,CAAAA,GAAAA,yCAAW,CAAA,CAAA,AAAC,AAA/D;QACA,MAAM1E,KAAK,GAAG6E,KAAK,GAAI9E,CAAAA,GAAG,GAAGD,GAAG,CAAA,GAAIA,GAAG,AAAvC;QACA,OAAOE,KAAK,CAAZ;KACF;CACF;AAEO,SAAS9C,yCAAY,CAAC0H,MAI5B,EAAE;IACD,MAAM,SAAE5E,KAAK,CAAA,OAAEF,GAAG,CAAA,OAAEC,GAAAA,CAAAA,EAAK,GAAG6E,MAAM,AAAV;IACxB,MAAMC,KAAK,GAAG,AAAC7E,CAAAA,KAAK,GAAGF,GAAG,CAAA,GAAKC,CAAAA,GAAG,GAAGD,GAAG,CAAA,AAAC,AAAzC;IACA,MAAMgE,KAAK,GAAGe,KAAK,GAAIF,CAAAA,CAAAA,GAAAA,yCAAS,CAAA,GAAGD,CAAAA,GAAAA,yCAAW,CAAA,CAAA,GAAIA,CAAAA,GAAAA,yCAAW,CAAA,AAA7D;IACA,OAAOZ,KAAK,CAAZ;CACF;AAEO,SAAS9G,yCAAe,CAC7B8H,MAAc,EACdC,MAAc,EACdd,OAAe,EACf;IACA,mEAAA;IACA,MAAMH,KAAK,GAAG,AAAC,CAAA,EAAE,GAAGgB,MAAM,CAAA,GAAI,GAAG,AAAjC;IACA,MAAME,UAAU,GAAIlB,KAAK,GAAG,GAAG,GAAImB,IAAI,CAACC,EAAE,AAA1C;IACA,IAAIC,EAAE,AAAQ,AAAd;IACA,IAAIC,EAAE,AAAQ,AAAd;IAEA,IAAIJ,UAAU,IAAIC,IAAI,CAACC,EAAE;QACvB,oCAAA;QACA,IAAIF,UAAU,IAAIC,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE;YAC7BE,EAAE,GAAGH,IAAI,CAACI,GAAG,CAACL,UAAU,CAAC,GAAGD,MAAM,CAAlCK;YACAD,EAAE,GAAGF,IAAI,CAACK,GAAG,CAACN,UAAU,CAAC,GAAGD,MAAM,CAAlCI;SACD,MAAM;YACLC,EAAE,GAAGH,IAAI,CAACI,GAAG,CAACJ,IAAI,CAACC,EAAE,GAAGF,UAAU,CAAC,GAAGD,MAAM,CAA5CK;YACAD,EAAE,GAAGF,IAAI,CAACK,GAAG,CAACL,IAAI,CAACC,EAAE,GAAGF,UAAU,CAAC,GAAGD,MAAM,GAAG,EAAE,CAAjDI;SACF;WAEA,oCAAA;IACA,IAAIH,UAAU,IAAIC,IAAI,CAACC,EAAE,GAAG,GAAG,EAAE;QAC/BE,EAAE,GAAGH,IAAI,CAACI,GAAG,CAACL,UAAU,GAAGC,IAAI,CAACC,EAAE,CAAC,GAAGH,MAAM,GAAG,EAAE,CAAjDK;QACAD,EAAE,GAAGF,IAAI,CAACK,GAAG,CAACN,UAAU,GAAGC,IAAI,CAACC,EAAE,CAAC,GAAGH,MAAM,GAAG,EAAE,CAAjDI;KACD,MAAM;QACLC,EAAE,GAAGH,IAAI,CAACI,GAAG,CAAC,CAAC,GAAGJ,IAAI,CAACC,EAAE,GAAGF,UAAU,CAAC,GAAGD,MAAM,GAAG,EAAE,CAArDK;QACAD,EAAE,GAAGF,IAAI,CAACK,GAAG,CAAC,CAAC,GAAGL,IAAI,CAACC,EAAE,GAAGF,UAAU,CAAC,GAAGD,MAAM,CAAhDI;KACF;IAEF,gEAAA;IACA,+EAAA;IACA,MAAM7B,CAAC,GAAG6B,EAAE,GAAGlB,OAAO,GAAG,CAAC,AAA1B;IACA,MAAMT,CAAC,GAAGS,OAAO,GAAG,CAAC,GAAGmB,EAAE,AAA1B;IACA,OAAO;WAAE9B,CAAC;WAAEE,CAAAA;KAAG,CAAD;CAChB;AAEO,SAASvG,yCAAe,CAC7BsI,QAAkC,EAClCtB,OAAe,EACf;IACA,MAAMkB,EAAE,GAAGI,QAAQ,CAACjC,CAAC,GAAGW,OAAO,GAAG,CAAC,AAAnC;IACA,wCAAA;IACA,MAAMmB,EAAE,GAAGnB,OAAO,GAAG,CAAC,GAAGsB,QAAQ,CAAC/B,CAAC,AAAnC;IACA,iDAAA;IACA,IAAIgC,KAAK,GAAGP,IAAI,CAACQ,KAAK,CAACL,EAAE,EAAED,EAAE,CAAC,AAA9B;IACA,IAAIK,KAAK,GAAG,CAAC,EACXA,KAAK,GAAGA,KAAK,GAAG,CAAC,GAAGP,IAAI,CAACC,EAAE,CAA3BM;IAEF,iDAAA;IACA,MAAMV,MAAM,GAAIU,KAAK,GAAGP,IAAI,CAACC,EAAE,GAAI,GAAG,AAAtC;IACA,OAAO,AAAC,CAAA,GAAG,GAAGJ,MAAM,CAAA,GAAI,GAAG,CAA3B;CACF;AAaA,uBAAA;AACA,MAAMkB,8BAAQ,GAAG,CAACC,GAAQ,GAAK;IAC7B,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;QAC3C,IAAI,OAAOC,MAAM,CAACC,cAAc,KAAK,UAAU,EAAE;YAC/C,MAAMC,SAAS,GAAGF,MAAM,CAACC,cAAc,CAACF,GAAG,CAAC,AAA5C;YACA,OAAOG,SAAS,KAAKF,MAAM,CAACE,SAAS,IAAIA,SAAS,KAAK,IAAI,CAA3D;SACF;QACA,OAAOF,MAAM,CAACE,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACL,GAAG,CAAC,KAAK,iBAAiB,CAAhE;KACF;IACA,OAAO,KAAK,CAAZ;CACD,AAAD;AAEO,MAAM7I,yCAAK,GAAG,CACnB,GAAGmJ,OAAO,AAAG,GAEbA,OAAO,CAACE,MAAM,CAAC,CAACC,MAAM,EAAEpF,OAAO,GAAK;QAClC,IAAIqF,KAAK,CAACC,OAAO,CAACtF,OAAO,CAAC,EACxB,MAAM,IAAIuF,SAAS,CACjB,oDAAoD,CACrD,CAFD;QAIFX,MAAM,CAACY,IAAI,CAACxF,OAAO,CAAC,CAACK,OAAO,CAAEgE,CAAAA,GAAG,GAAK;YACpC,IAAI;gBAAC,WAAW;gBAAE,aAAa;gBAAE,WAAW;aAAC,CAACoB,QAAQ,CAACpB,GAAG,CAAC,EACzD,OAAA;YAEF,IAAIgB,KAAK,CAACC,OAAO,CAACF,MAAM,CAACf,GAAG,CAAC,CAAC,IAAIgB,KAAK,CAACC,OAAO,CAACtF,OAAO,CAACqE,GAAG,CAAC,CAAC,EAC3De,MAAM,CAACf,GAAG,CAAC,GAAGrE,OAAO,CAACqE,GAAG,CAAC,CAA1Be;iBACK,IAAIV,8BAAQ,CAACU,MAAM,CAACf,GAAG,CAAC,CAAC,IAAIK,8BAAQ,CAAC1E,OAAO,CAACqE,GAAG,CAAC,CAAC,EACxDe,MAAM,CAACf,GAAG,CAAC,GAAGvI,yCAAK,CAACsJ,MAAM,CAACf,GAAG,CAAC,EAAarE,OAAO,CAACqE,GAAG,CAAC,CAAY,CAApEe;iBAEAA,MAAM,CAACf,GAAG,CAAC,GAAGrE,OAAO,CAACqE,GAAG,CAAC,CAA1Be;SAEH,CAAC,CAAF;QACA,OAAOA,MAAM,CAAb;KACD,EAAE,EAAE,CAAC,AAAN,AAAA;;;AElIF;;AAYO,SAASrJ,yCAAO,CAAC,eACtB2G,WAAW,CAAA,aACXrE,SAAS,CAAA,WACTsE,OAAO,CAAA,WACPC,OAAAA,CAAAA,EACS,EAAE;IACX,MAAM+C,QAAQ,GAAGtC,CAAAA,GAAAA,yCAAS,CAAA,GAAGD,CAAAA,GAAAA,yCAAW,CAAA,IAAI,GAAG,AAA/C;IACA,MAAMwC,WAAW,GAAGlD,WAAW,GAAGrE,SAAS,AAA3C;IACA,MAAMwH,aAAa,GAAGnK,CAAAA,GAAAA,yCAAe,CAAA,CACnC0H,CAAAA,GAAAA,yCAAW,CAAA,EACXV,WAAW,EACXC,OAAO,CACR,AAJD;IAKA,MAAMmD,UAAU,GAAI,CAApB;MACF,EAAQD,aAAa,CAAC7D,CAAE,CAAA,CAAA,EAAG6D,aAAa,CAAC3D,CAAC,GAAGU,OAAQ,CAArD;EACA,CAAG,AAAH;IACE,MAAMmD,WAAW,GAAGrK,CAAAA,GAAAA,yCAAe,CAAA,CACjC2H,CAAAA,GAAAA,yCAAS,CAAA,EACTX,WAAW,EACXC,OAAO,CACR,AAJD;IAKA,MAAMqD,QAAQ,GAAI,CAAlB;MACF,EAAQtD,WAAY,CAAA,CAAA,EAAGA,WAAY,CAAnC;MACA,EAAQiD,QAAQ,GAAG,GAAG,GAAG,GAAI,CAA7B;;MAEA,EAAQI,WAAW,CAAC/D,CAAE,CAAA,CAAA,EAAG+D,WAAW,CAAC7D,CAAC,GAAGU,OAAQ,CAAjD;EACA,CAAG,AAAH;IAEE,MAAMqD,aAAa,GAAGvK,CAAAA,GAAAA,yCAAe,CAAA,CACnC2H,CAAAA,GAAAA,yCAAS,CAAA,EACTuC,WAAW,EACXjD,OAAO,CACR,AAJD;IAKA,MAAMuD,SAAS,GAAI,CAAnB;MACF,EAAQ7H,SAAS,GAAG,CAAE,CAAA,CAAA,EAAGA,SAAS,GAAG,CAAE,CAAvC;MACA,EAAQsH,QAAQ,GAAG,GAAG,GAAG,GAAI,CAA7B;;MAEA,EAAQM,aAAa,CAACjE,CAAE,CAAA,CAAA,EAAGiE,aAAa,CAAC/D,CAAC,GAAGU,OAAQ,CAArD;EACA,CAAG,AAAH;IAEE,MAAMuD,WAAW,GAAGzK,CAAAA,GAAAA,yCAAe,CAAA,CACjC0H,CAAAA,GAAAA,yCAAW,CAAA,EACXwC,WAAW,EACXjD,OAAO,CACR,AAJD;IAKA,MAAMyD,QAAQ,GAAI,CAAlB;MACF,EAAQR,WAAY,CAAA,CAAA,EAAGA,WAAY,CAAnC;MACA,EAAQD,QAAQ,GAAG,GAAG,GAAG,GAAI,CAA7B;;MAEA,EAAQQ,WAAW,CAACnE,CAAE,CAAA,CAAA,EAAGmE,WAAW,CAACjE,CAAC,GAAGU,OAAQ,CAAjD;EACA,CAAG,AAAH;IAEE,MAAMyD,UAAU,GAAI,CAApB;MACF,EAAQhI,SAAS,GAAG,CAAE,CAAA,CAAA,EAAGA,SAAS,GAAG,CAAE,CAAvC;MACA,EAAQsH,QAAQ,GAAG,GAAG,GAAG,GAAI,CAA7B;;MAEA,EAAQE,aAAa,CAAC7D,CAAE,CAAA,CAAA,EAAG6D,aAAa,CAAC3D,CAAC,GAAGU,OAAQ,CAArD;EACA,CAAG,AAAH;IAEE,OAAOkD,UAAU,GAAGE,QAAQ,GAAGE,SAAS,GAAGE,QAAQ,GAAGC,UAAU,GAAG,IAAI,CAAvE;CACF;;;ACxEA;;;AAmBA,MAAMO,wCAAkB,GAAS;IAC/BvI,SAAS,EAAE,CAAC;IACZC,MAAM,EAAE,CAAC;IACTtB,KAAK,EAAE,OAAO;IACduJ,GAAG,EAAE,OAALA;CACD,AAAD;AACA,MAAMM,uCAAiB,GAAS;IAC9BxI,SAAS,EAAE,CAAC;IACZC,MAAM,EAAE,CAAC;IACTtB,KAAK,EAAE,OAAO;IACduJ,GAAG,EAAE,OAALA;CACD,AAAD;AACA,MAAMO,mCAAa,GAAG;IACpBlJ,KAAK,EAAE,EAAE;IACTD,KAAK,EAAE,CAAC;IACRE,IAAI,EAAE+I,wCAAkB;IACxB9I,GAAG,EAAE+I,uCAAL/I;CACD,AAAD;AAEO,SAAS9B,yCAAS,CAAC,QACxBY,IAAI,CAAA,QACJ6J,IAAI,GAAG,IAAI,UACXC,KAAK,GAAGI,mCAARJ,GAGD,EAAE;IAED,MAAMjD,MAAM,GAAG7G,IAAI,GAAG,CAAC,AAAvB;IACA,MAAM,SACJgB,KAAK,CAAA,SACLD,KAAK,CAAA,OACLG,GAAG,CAAA,QACHD,IAAAA,CAAAA,EACD,GAAG/B,CAAAA,GAAAA,yCAAK,CAAA,CAACgL,mCAAa,EAAEJ,KAAK,CAAC,AAA/B;IACA,qBACE,gBAAC,GAAC;QAAC,IAAI,EAAED,IAAI,GAAI,CAAA,KAAA,EAAOA,IAAK,CAAA,CAAA,CAAE,GAAGM,SAAS;kBAEvC1B,KAAK,CAACzH,KAAK,CAAC,CAAC+C,IAAI,CAACoG,SAAS,CAAC,CAAC9D,GAAG,CAAC,CAAC+D,CAAC,EAAEC,CAAC,GAAK;YACzC,MAAMjD,GAAG,GAAGL,IAAI,CAACK,GAAG,CAAC,CAAC,GAAGL,IAAI,CAACC,EAAE,GAAGhG,KAAK,GAAGqJ,CAAC,CAAC,AAA7C;YACA,MAAMlD,GAAG,GAAGJ,IAAI,CAACI,GAAG,CAAC,CAAC,GAAGJ,IAAI,CAACC,EAAE,GAAGhG,KAAK,GAAGqJ,CAAC,CAAC,AAA7C;YACA,MAAMC,MAAM,GAAGD,CAAC,GAAGtJ,KAAK,KAAK,CAAC,AAA9B;YACA,MAAM,SACJX,KAAK,CAAA,UACLsB,MAAM,CAAA,aACND,SAAS,CAAA,OACTkI,GAAAA,CAAAA,EACD,GAAGW,MAAM,GAAGrJ,IAAI,GAAGC,GAAG,AAAvB;YACA,qBACE,gBAAC,MAAI;gBAEH,MAAM,EAAEd,KAAK;gBACb,WAAW,EAAEqB,SAAS;gBACtB,aAAa,EAAEkI,GAAG;gBAClB,EAAE,EAAEvC,GAAG,GAAGP,MAAM,GAAGA,MAAM;gBACzB,EAAE,EAAEM,GAAG,GAAGN,MAAM,GAAGA,MAAM;gBACzB,EAAE,EAAEO,GAAG,GAAIP,CAAAA,MAAM,GAAGnF,MAAM,CAAA,GAAImF,MAAM;gBACpC,EAAE,EAAEM,GAAG,GAAIN,CAAAA,MAAM,GAAGnF,MAAM,CAAA,GAAImF,MAAM;eAP/BwD,CAAC,CAQN,CAVJ;SAYD,CAAC;MAEF,CAAR;CAEA;;;AClFA;;;AAcO,SAAShL,wCAAW,CAAC,OAC1BuC,GAAG,CAAA,OACHC,GAAG,CAAA,SACHC,KAAK,CAAA,QACL9B,IAAI,CAAA,aACJyB,SAAS,GAAG,EAAE,cACd+I,SAAS,CAAA,UACTE,MAAAA,CAAAA,EACiB,EAAE;IACnB,MAAMnK,MAAM,GAAGP,IAAI,GAAGP,CAAAA,GAAAA,yCAAiB,CAAA,AAAvC;IACA,MAAMkL,MAAM,GAAG3K,IAAI,GAAG,CAAC,AAAvB;IACA,uEAAA;IACA,MAAM4K,UAAU,GAAG,AAAC5K,CAAAA,IAAI,GAAIyB,SAAS,GAAG,GAAI,CAAA,GAAI,CAAC,AAAjD;IACA,MAAMoF,MAAM,GAAG+D,UAAU,GAAG,CAAC,AAA7B;IACA,6CAAA;IACA,MAAMhG,OAAO,GAAI,AAAC9C,CAAAA,KAAK,GAAGF,GAAG,CAAA,GAAI,GAAG,GAAKC,CAAAA,GAAG,GAAGD,GAAG,CAAA,AAAC,AAAnD;IACA,kBAAA;IACA,MAAMiJ,aAAa,GAAItK,MAAM,GAAGqK,UAAU,GAAG/D,MAAO,AAApD;IACA,oDAAA;IACA,MAAMiE,WAAW,GAAGD,aAAa,GAAGhE,MAAM,AAA1C;IACA,iDAAA;IACA,MAAMkE,WAAW,GAAGlE,MAAM,AAA1B;IACA,4CAAA;IACA,MAAMhC,OAAO,GAAI,AAACkG,CAAAA,WAAW,GAAGD,WAAW,CAAA,GAAIlG,OAAO,GAAG,GAAG,GAAIkG,WAAW,AAA3E;IACA,MAAME,iBAAiB,GAAGJ,UAAU,GAAInJ,SAAS,GAAG,CAAE,AAAtD;IACA,qBAAO,iBAAC,KAAG;QAAC,SAAS,EAAE+I,SAAS;QAAE,KAAK,EAAExK,IAAI;QAAE,MAAM,EAAEO,MAAM;;0BAC3D,iBAAC,MAAI;gBAAC,EAAE,EAAC,WAAW;;kCAClB,gBAAC,MAAI;wBAAC,EAAE,EAAC,WAAW;wBAAC,CAAC,EAAC,GAAG;wBAAC,CAAC,EAAC,GAAG;wBAAC,KAAK,EAAEP,IAAI;wBAAE,MAAM,EAAEO,MAAM;wBAAE,IAAI,EAAC,OAAO;sBAAhF;kCACM,gBAAC,QAAM;wBAAC,EAAE,EAAC,oBAAoB;wBAAC,EAAE,EAAEoK,MAAM;wBAAE,EAAE,EAAEpK,MAAM,GAAGqK,UAAU;wBAAE,CAAC,EAAEA,UAAU,GAAGnJ,SAAS;sBAApG;kCACM,gBAAC,QAAM;wBAAC,EAAE,EAAC,cAAc;wBAAC,EAAE,EAAEkJ,MAAM;wBAAE,EAAE,EAAEC,UAAU,GAAGnJ,SAAS,GAAI,AAACmJ,CAAAA,UAAU,GAAGnJ,SAAS,GAAG,CAAC,CAAA,GAAI,CAAE;wBAAE,CAAC,EAAE,AAACmJ,CAAAA,UAAU,GAAGnJ,SAAS,GAAG,CAAC,CAAA,GAAI,CAAC;sBAAhJ;kCACM,gBAAC,MAAI;wBAAC,EAAE,EAAC,oBAAoB;wBAAC,CAAC,EAAEkJ,MAAM,GAAG9D,MAAM,GAAGpF,SAAS;wBAAE,CAAC,EAAEoF,MAAM;wBAAE,KAAK,EAAE+D,UAAU,GAAGnJ,SAAS,GAAG,CAAC;wBAAE,MAAM,EAAElB,MAAM,GAAGqK,UAAU,GAAG/D,MAAM;sBAAtJ;;cACA;0BACI,gBAAC,QAAM;gBAAC,EAAE,EAAC,aAAa;gBAAC,IAAI,EAAC,cAAc;gBAAC,EAAE,EAAE8D,MAAM;gBAAE,EAAE,EAAEpK,MAAM,GAAGqK,UAAU;gBAAE,CAAC,EAAEA,UAAU;gBAAE,IAAI,EAAC,iBAAiB;cAA3H;0BACI,gBAAC,QAAM;gBAAC,EAAE,EAAC,SAAS;gBAAC,IAAI,EAAC,cAAc;gBAAC,EAAE,EAAED,MAAM;gBAAE,EAAE,EAAE9D,MAAM;gBAAE,CAAC,EAAEA,MAAM;gBAAE,IAAI,EAAC,iBAAiB;cAAtG;0BACI,gBAAC,QAAM;gBAAC,EAAE,EAAC,eAAe;gBAAC,IAAI,EAAC,cAAc;gBAAC,EAAE,EAAE8D,MAAM;gBAAE,EAAE,EAAEpK,MAAM,GAAGqK,UAAU;gBAAE,CAAC,EAAEI,iBAAiB;cAA5G;0BACI,gBAAC,MAAI;gBAAC,EAAE,EAAC,cAAc;gBAAC,IAAI,EAAC,cAAc;gBAAC,CAAC,EAAEL,MAAM,GAAG9D,MAAM;gBAAE,CAAC,EAAEA,MAAM;gBAAE,KAAK,EAAE+D,UAAU;gBAAE,MAAM,EAAErK,MAAM,GAAGqK,UAAU,GAAG/D,MAAM;gBAAG,IAAI,EAAC,iBAAiB;cAA/J;0BACI,iBAAC,MAAI;gBAAC,KAAK,EAAE;oBACXoE,UAAU,EAAE,MAAZA;iBACD;gBAAE,QAAQ,EAAED,iBAAiB;gBAAE,UAAU,EAAC,QAAQ;gBAAC,CAAC,EAAEL,MAAM;gBAAE,CAAC,EAAEpK,MAAM,GAAGqK,UAAU;gBAAE,gBAAgB,EAAC,SAAS;gBAAC,iBAAiB,EAAC,SAAS;;oBAC1I9I,KAAK;oBAAE,OAAO4I,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAG,MAAG;;cAC1D;0BACI,iBAAC,GAAC;;kCACA,gBAAC,QAAM;wBAAC,EAAE,EAAC,oBAAoB;wBAAC,IAAI,EAAC,cAAc;wBAAC,EAAE,EAAEC,MAAM;wBAAE,EAAE,EAAE9F,OAAO;wBAAE,CAAC,EAAE,AAAC+F,CAAAA,UAAU,GAAGnJ,SAAS,GAAG,CAAC,CAAA,GAAI,CAAC;sBAAtH;kCACM,gBAAC,MAAI;wBAAC,EAAE,EAAC,gBAAgB;wBAAC,IAAI,EAAC,cAAc;wBAAC,CAAC,EAAEkJ,MAAM,GAAG9D,MAAM,GAAIpF,SAAS,GAAG,CAAE;wBAAE,CAAC,EAAEoD,OAAO;wBAAE,KAAK,EAAE+F,UAAU,GAAGnJ,SAAS,GAAG,CAAC;wBAAE,MAAM,EAAEoJ,aAAa,GAAGhG,OAAO;sBAAxK;;cACA;;MACQ,CAAR;CACA;;;A;;;A,S,sD,G;I,O,iO,C;C;AChDA,MAAMqG,gCAAU,GAAhB,aAAA,CAAA,CAAA,GAAA,wBAAA,CAAA,CAAA,QAAA,EAAA;IAAgB,MAAA,EAAA,WAAA;CAAA,CAAA,CAAA,EAAA,CAAkB,AAAlB;AAChB,MAAMC,iCAAW,GAAjB,aAAA,CAAA,CAAA,GAAA,wBAAA,CAAA,CAAA,QAAA,EAAA;IAAiB,MAAA,EAAA,WAAA;CAAA,CAAA,CAAA;IAAA,IAAA,EAAA,SAAA;IAAA,MAAA,EAAA,6QAAA;CAAA,CAmBhB,AAnBgB;AAqBV,MAAM3L,yCAAqB,GAAG;IACnC4B,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,iBAAPA;CACD,AAAD;AAEO,SAAS/B,yCAAM,CAAC,KACrB6F,CAAC,GAAG,CAAC,MACLE,CAAC,GAAG,CAAC,SACLtF,IAAI,GAAG,EAAE,eACTC,UAAU,GAAG,CAAC,WACdU,MAAM,GAAGnB,yCAATmB,GACY,EAAE;IACd,MAAMyK,MAAM,GAAGnL,UAAU,GAAG,CAAC,AAA7B;IACA,MAAMoL,OAAO,GAAG;QACd,GAAG7L,yCAAqB;QACxB,GAAGmB,MAAH;KACD,AAAD;IACA,MAAM2K,GAAG,GAAG1M,CAAAA,GAAAA,aAAM,CAAA,CAAiB,IAAI,CAAC,AAAxC;IACA,MAAMqG,MAAM,GAAGrG,CAAAA,GAAAA,aAAM,CAAA,CAAgB,IAAI,CAAC,AAA1C;IACA,MAAM,CAACgH,KAAK,EAAE4F,QAAQ,CAAC,GAAG3M,CAAAA,GAAAA,eAAQ,CAAA,CAAC,CAAC,CAAC,AAArC;IACA,MAAM4M,eAAe,GAAGxL,UAAU,GAAG,CAAC,AAAtC;IACA,MAAMyL,UAAU,GAAGzL,UAAU,GAAG,CAAC,AAAjC;IACA,MAAM0L,aAAa,GAAG,CAAC,AAAvB;IACA,MAAMC,cAAc,GAAGD,aAAa,GAAKD,CAAAA,UAAU,GAAID,eAAe,GAAG,CAAE,GAAIC,UAAU,CAAA,AAAC,AAA1F;IACA,MAAMG,cAAc,GAAI5L,UAAU,GAAG2L,cAAc,GAAG,CAAE,AAAxD;IAIAjN,CAAAA,GAAAA,gBAAS,CAAA,CAAC,IAAM;QACd,IAAI2M,GAAG,CAAClI,OAAO,IAAI6B,MAAM,CAAC7B,OAAO,EAAE;YACjC,MAAM0I,cAAc,GAAGR,GAAG,CAAClI,OAAO,CAAC2I,qBAAqB,EAAE,AAA1D;YACA,MAAMC,WAAW,GAAG/G,MAAM,CAAC7B,OAAO,CAAC2I,qBAAqB,EAAE,AAA1D;YACA,IAAIE,IAAI,GAAGH,cAAc,CAACI,IAAI,GAAGJ,cAAc,CAACxL,KAAK,GAAG,CAAC,AAAzD;YACA,IAAI6L,IAAI,GAAGL,cAAc,CAACM,GAAG,GAAGN,cAAc,CAACvL,MAAM,GAAG,CAAC,AAAzD;YAEA,IAAI8L,KAAK,GAAGL,WAAW,CAACE,IAAI,GAAGF,WAAW,CAAC1L,KAAK,GAAG,CAAC,AAApD;YACA,IAAIgM,KAAK,GAAGN,WAAW,CAACI,GAAG,GAAGJ,WAAW,CAACzL,MAAM,GAAG,CAAC,AAApD;YAEA,IAAIgM,CAAC,GAAGF,KAAK,GAAGJ,IAAI,AAApB;YACA,IAAIO,CAAC,GAAGF,KAAK,GAAGH,IAAI,AAApB;YACAX,QAAQ,CAACzE,IAAI,CAACQ,KAAK,CAACiF,CAAC,EAAED,CAAC,CAAC,GAAGxF,IAAI,CAACC,EAAE,GAAC,CAAC,CAAC,CAAtCwE;SACF;KACD,EAAE;QAACF,GAAG;QAAElG,CAAC;QAAEnF,UAAU;QAAEqF,CAAC;KAAC,CAAC,CAA3B;IAGA,qBAAO,iBAAC,KAAG;QAAC,GAAG,EAAEL,MAAM;QAAE,KAAK,EAAEjF,IAAI,GAAGoL,MAAM;QAAE,MAAM,EAAEpL,IAAI,GAAGoL,MAAM;QAAE,OAAO,EAAG,CAAA,CAAA,EAAGnL,UAAW,CAAA,EAAA,EAAIA,UAAW,CAAA,CAAA,EAAGD,IAAI,GAAGoL,MAAO,CAAA,CAAA,EAAGpL,IAAI,GAAGoL,MAAO,CAAA,CAAC;;0BAC9I,gBAAC,iCAAW;gBACV,CAAC,EAAEnL,UAAU;gBACb,EAAE,EAAEmF,CAAC;gBACL,EAAE,EAAEE,CAAC;gBACL,IAAI,EAAE+F,OAAO,CAAC/J,KAAK;gBACnB,WAAW,EAAC,KAAK;cALvB;0BAOI,gBAAC,gCAAU;gBACT,CAAC,EAAErB,UAAU;gBACb,EAAE,EAAEmF,CAAC;gBACL,EAAE,EAAEE,CAAC;gBACL,IAAI,EAAE+F,OAAO,CAACjK,MAAM;cAJ1B;0BAMI,gBAAC,GAAC;gBAAC,KAAK,EAAE;oBACRqL,SAAS,EAAG,CAAA,YAAA,EAAcrH,CAAC,GAAInF,UAAY,CAAA,IAAA,EAAMqF,CAAC,GAAIrF,UAAY,CAAA,MAAA,CAAO;oBACzEyM,MAAM,EAAE,MAARA;iBACD;0BACC,cAAA,iBAAC,KAAG;oBAAC,KAAK,EAAEtB,MAAM;oBAAE,MAAM,EAAEA,MAAM;oBAAE,OAAO,EAAG,CAAA,IAAA,EAAMA,MAAO,CAAA,CAAA,EAAGA,MAAO,CAAA,CAAC;;sCACpE,gBAAC,MAAI;4BAAC,GAAG,EAAEE,GAAG;4BAAE,IAAI,EAAC,aAAa;4BAAC,KAAK,EAAEF,MAAM;4BAAE,MAAM,EAAEA,MAAM;0BAAxE;sCACQ,iBAAC,GAAC;4BAAC,KAAK,EAAE;gCACRqB,SAAS,EAAG,CAAA,OAAA,EAAS7G,KAAM,CAAA,IAAA,CAAK;gCAChC+G,eAAe,EAAE,eAAjBA;6BACD;;8CACC,gBAAC,MAAI;oCAAC,IAAI,EAAEtB,OAAO,CAAChK,IAAI;oCAAE,CAAC,EAAEqK,UAAU;oCAAE,CAAC,EAAE,CAAC,GAAGG,cAAc;oCAAE,KAAK,EAAE5L,UAAU;oCAAE,MAAM,EAAE0L,aAAa;kCAAlH;8CACU,gBAAC,MAAI;oCAAC,IAAI,EAAEN,OAAO,CAAChK,IAAI;oCAAE,CAAC,EAAEqK,UAAU;oCAAE,CAAC,EAAED,eAAe,GAAGI,cAAc;oCAAE,KAAK,EAAE5L,UAAU;oCAAE,MAAM,EAAE0L,aAAa;kCAAhI;8CACU,gBAAC,MAAI;oCAAC,IAAI,EAAEN,OAAO,CAAChK,IAAI;oCAAE,CAAC,EAAEqK,UAAU;oCAAE,CAAC,EAAED,eAAe,GAAG,CAAC,GAAGI,cAAc;oCAAE,KAAK,EAAE5L,UAAU;oCAAE,MAAM,EAAE0L,aAAa;kCAApI;;0BACA;;kBACA;cACA;;MACQ,CAAR;CACA;;;;A,S,sD,G;I,O,iO,C;C;ANhGA,MAAM9L,6BAAO,GAAb,aAAA,CAAA,CAAA,GAAA,wBAAA,CAAA,CAAA,KAAA,EAAA;IAAa,MAAA,EAAA,WAAA;CAAA,CAAA,CAAA;IAAA,IAAA,EAAA,QAAA;IAAA,MAAA,EAAA,mBAAA;CAAA,CAEZ,AAFY;AAIb,MAAMC,iCAAW,GAAjB,aAAA,CAAA,CAAA,GAAA,wBAAA,CAAA,CAAA,QAAA,EAAA;IAAiB,MAAA,EAAA,WAAA;CAAA,CAAA,CAAA;IAAA,IAAA,EAAA,QAAA;IAAA,MAAA,EAAA,gDAAA;CAAA,CAIhB,AAJgB;AAWjB,MAAMI,qCAAe,GAArB,aAAA,CAAA,CAAA,GAAA,wBAAA,CAAA,CAAA,KAAA,EAAA;IAAqB,MAAA,EAAA,WAAA;CAAA,CAAA,CAAA,oDAAA,EAKVC,CAAAA,KAAK,GAAIA,KAAK,CAACH,IAAI,EAAA,YAAA,EAClBG,CAAAA,KAAK,GAAIA,KAAK,CAACH,IAAI,EAAA,oBAAA,EACXG,CAAAA,KAAK,GAAIA,KAAK,CAACF,UAAU,GAAE,CAAC,EAAA,kBAAA,EAC9BE,CAAAA,KAAK,GAAIA,KAAK,CAACF,UAAU,EAAA,KAAA,CAC1C,AAToB;AAYrB,MAAMZ,iCAAW,GAAA,aAAG,CAAA,CAAA,GAAA,wBAAA,CAAA,CAAOC,CAAAA,GAAAA,wCAAe,CAAA,EAA1C;IAA0C,MAAA,EAAA,WAAA;CAAA,CAAC,CAAA,QAAA,EAIhCa,CAAAA,KAAK,GAAIA,KAAK,CAACC,KAAK,EAAA,kDAAA,CAG9B,AAPyC;AAa1C,MAAMI,8BAAQ,GAAd,aAAA,CAAA,CAAA,GAAA,wBAAA,CAAA,CAAA,KAAA,EAAA;IAAc,MAAA,EAAA,WAAA;CAAA,CAAA,CAAA,QAAA,EACHL,CAAAA,KAAK,GAAIA,KAAK,CAACG,KAAK,EAAA,YAAA,EACnBH,CAAAA,KAAK,GAAIA,KAAK,CAACI,MAAM,EAAA,KAAA,CAChC,AAHa;AAKd,MAAME,yBAAG,GAAT,aAAA,CAAA,CAAA,GAAA,wBAAA,CAAA,CAAA,KAAA,EAAA;IAAS,MAAA,EAAA,WAAA;CAAA,CAAA,CAAA;IAAA,IAAA,EAAA,QAAA;IAAA,MAAA,EAAA,mBAAA;CAAA,CAER,AAFQ;AAIT,MAAMC,qCAAe,GAAG;IACtBC,MAAM,EAAEnB,CAAAA,GAAAA,yCAARmB,CAAAA;CACD,AAAD;AACA,MAAMC,oCAAc,GAAG;IACrBD,MAAM,EAAE;QAAC,SAAS;QAAE,SAAS;KAAC;IAC9BE,OAAO,EAAE;QACPC,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE;YACJb,KAAK,EAAE,OAAPA;SACD;QACDc,GAAG,EAAE;YACHd,KAAK,EAAE,iBAAPA;SACF;KACF;CACD,AAAD;AA6CO,SAAS+B,yCAAU,CAAC,QACzBnC,IAAI,GAAG,GAAG,QACV4B,GAAG,GAAG,CAAC,QACPC,GAAG,GAAG,GAAG,UACTC,KAAK,CAAA,eACLC,WAAW,CAAA,EACXX,MAAM,EAAEgB,WAAW,CAAA,EACnBF,KAAK,EAAEG,UAAU,CAAA,YACjBL,QAAQ,CAAA,YACRC,QAAAA,CAAAA,EACgB,EAAE;IAClB,MAAMb,MAAM,GAAGlC,CAAAA,GAAAA,yCAAK,CAAA,CAAC;QACnB,GAAGwB,qCAAe;QAClBV,IAAI,EAAEA,IAAI,GAAG,EAAbA;KACD,EAAEoC,WAAW,IAAI,EAAE,CAAC,AAArB;IACA,MAAMF,KAAK,GAAGhD,CAAAA,GAAAA,yCAAK,CAAA,CAAC;QAClB,GAAG0B,oCAAc;QACjBa,SAAS,EAAEzB,IAAI,GAAG,EAAlByB;KACD,EAAEY,UAAU,IAAI,EAAE,CAAC,AAApB;IACA,MAAMC,OAAO,GAAG1D,CAAAA,GAAAA,aAAM,CAAA,CAAgB,IAAI,CAAC,AAA3C;IACA,MAAM4D,UAAU,GAAG5D,CAAAA,GAAAA,aAAM,CAAA,CAAiB,IAAI,CAAC,AAA/C;IACA,MAAM8D,UAAU,GAAG9D,CAAAA,GAAAA,aAAM,CAAA,CAAoB,IAAI,CAAC,AAAlD;IACA,MAAM,CAACwB,KAAK,EAAEwC,QAAQ,CAAC,GAAG/D,CAAAA,GAAAA,eAAQ,CAAA,CAAC,aAAa,CAAC,AAAjD;IACA,MAAMgE,gBAAgB,GAAG7C,IAAI,GAAG,CAAC,GAAGkC,KAAK,CAACT,SAAS,AAAnD;IACA,MAAMqB,YAAY,GAAIZ,KAAK,CAACT,SAAS,GAAIS,KAAK,CAACT,SAAS,GAAG/B,CAAAA,GAAAA,yCAAmB,CAAA,AAA9E;IACA,MAAMa,MAAM,GAAGP,IAAI,GAAGP,CAAAA,GAAAA,yCAAiB,CAAA,GAAGqD,YAAY,AAAtD;IACA,MAAMC,WAAW,GAAG/D,CAAAA,GAAAA,yCAAY,CAAA,CAAC;eAC/B8C,KAAK;aACLF,GAAG;aACHC,GAAAA;KACD,CAAC,AAAF;IACA,MAAMmB,cAAc,GAAGlE,CAAAA,GAAAA,yCAAe,CAAA,CACpCiE,WAAW,EACXF,gBAAgB,GAAGX,KAAK,CAACT,SAAS,GAAG,CAAC,EACtCzB,IAAI,CACL,AAJD;IAKA,MAAMiD,YAAY,GAAG,CAAChB,QAAQ,IAAIiB,OAAO,CAAClB,QAAQ,CAAC,AAAnD;IAEArD,CAAAA,GAAAA,gBAAS,CAAA,CAAC,IAAM;QACd,MAAMwE,SAAS,GAAGT,UAAU,CAACU,OAAO,AAApC;QACA,IAAID,SAAS,EAAE;YACb,MAAME,GAAG,GAAGF,SAAS,CAACG,UAAU,CAAC,IAAI,CAAC,AAAtC;YACA,IAAID,GAAG,EAAE;gBAAA,IAAA,aAAA,AAAA;gBACP,MAAME,QAAQ,GAAGF,GAAG,CAACG,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE7D,CAAAA,GAAAA,yCAAY,CAAA,EAAEC,CAAAA,GAAAA,yCAAa,CAAA,CAAC,AAA5E;gBACA,CAAA,aAAA,GAAAsC,KAAK,CAACvB,MAAM,CAAA,KAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,IAAZ,aAAA,CAAc8C,OAAO,CAAC,CAACrD,KAAK,EAAEsD,KAAK,GAAK;oBACtC,MAAMC,MAAM,GAAGD,KAAK,KAAK,CAAC,GAAG,GAAG,GAAGA,KAAK,KAAKxB,KAAK,CAACvB,MAAM,CAACe,MAAM,GAAG,CAAC,GAAG,GAAG,GAAIgC,KAAK,GAAIxB,CAAAA,KAAK,CAACvB,MAAM,CAACe,MAAM,GAAG,CAAC,CAAA,AAAE,AAAhH;oBACA6B,QAAQ,CAACK,YAAY,CAACD,MAAM,EAAEvD,KAAK,CAAC,CAApCmD;iBACD,CAAC,CAAF;gBACAF,GAAG,CAACQ,SAAS,GAAGN,QAAQ,CAAxBF;gBACAA,GAAG,CAACS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAEnE,CAAAA,GAAAA,yCAAY,CAAA,EAAEC,CAAAA,GAAAA,yCAAa,CAAA,CAAC,CAA3CyD;gBACAA,GAAG,CAACU,IAAI,EAAE,CAAVV;aACF;SACF;KACD,EAAE;QAACnB,KAAK,CAACvB,MAAM;KAAC,CAAC,CAAlB;IAEAhC,CAAAA,GAAAA,gBAAS,CAAA,CAAC,IAAM;QACdqF,kBAAkB,EAAE,CAApBA;KACD,EAAE;QAAClC,KAAK;QAAEI,KAAK,CAACvB,MAAM;KAAC,CAAC,CAAzB;IAEA,IAAImB,KAAK,GAAGF,GAAG,IAAIE,KAAK,GAAGD,GAAG,EAC5B,MAAM,IAAIoC,KAAK,CAAE,CAAA,0BAAA,EAA4BrC,GAAI,CAAA,KAAA,EAAOC,GAAI,CAAA,CAAC,CAAC,CAA9D;IAGF,SAASqC,YAAY,CAACC,EAAoC,EAAE;QAC1D,IAAIA,EAAE,CAACE,OAAO,KAAK,CAAC,EAClB,kEAAA;QACAC,WAAW,CAACH,EAAE,CAAC,CAAfG;KAEJ;IAEA,SAASA,WAAW,CAACH,EAAoC,EAAE;QACzD,MAAMI,SAAS,GAAG/B,UAAU,CAACY,OAAO,AAApC;QACA,IAAImB,SAAS,EAAE;YACbA,SAAS,CAACC,gBAAgB,CAAC,WAAW,EAAEC,gBAAgB,CAAC,CAAzDF;YACAA,SAAS,CAACC,gBAAgB,CAAC,YAAY,EAAEE,oBAAoB,CAAC,CAA9DH;YACAA,SAAS,CAACC,gBAAgB,CAAC,SAAS,EAAEE,oBAAoB,CAAC,CAA3DH;SACF;QACAE,gBAAgB,CAACN,EAAE,CAAC,CAApBM;KACF;IAEA,SAASC,oBAAoB,GAAG;QAC9B,MAAMH,SAAS,GAAG/B,UAAU,CAACY,OAAO,AAApC;QACA,IAAImB,SAAS,EAAE;YACbA,SAAS,CAACI,mBAAmB,CAAC,WAAW,EAAEF,gBAAgB,CAAC,CAA5DF;YACAA,SAAS,CAACI,mBAAmB,CAAC,YAAY,EAAED,oBAAoB,CAAC,CAAjEH;YACAA,SAAS,CAACI,mBAAmB,CAAC,SAAS,EAAED,oBAAoB,CAAC,CAA9DH;SACF;KACF;IAEA,SAASP,kBAAkB,GAAG;QAC5B,MAAMb,SAAS,GAAGT,UAAU,CAACU,OAAO,AAApC;QACA,IAAID,SAAS,EAAE;YACb,MAAME,GAAG,GAAGF,SAAS,CAACG,UAAU,CAAC,IAAI,CAAC,AAAtC;YACA,6CAAA;YACA,IAAID,GAAG,EAAE;gBACP,MAAMuB,OAAO,GAAI,AAAC9C,CAAAA,KAAK,GAAGF,GAAG,CAAA,GAAI,GAAG,GAAKC,CAAAA,GAAG,GAAGD,GAAG,CAAA,AAAC,AAAnD;gBACA,MAAMiD,OAAO,GAAG,AAAClF,CAAAA,CAAAA,GAAAA,yCAAY,CAAA,GAAG,CAAC,CAAA,GAAIiF,OAAO,GAAG,GAAG,AAAlD;gBACA,MAAME,CAAC,GAAGzB,GAAG,CAAC0B,YAAY,CAACF,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACG,IAAI,AAAjD;gBACApC,QAAQ,CAAE,CAAA,IAAA,EAAMkC,CAAC,CAAC,CAAC,CAAE,CAAA,CAAA,EAAGA,CAAC,CAAC,CAAC,CAAE,CAAA,CAAA,EAAGA,CAAC,CAAC,CAAC,CAAE,CAAA,CAAA,CAAE,CAAC,CAAxClC;aACF;SACF;KACF;IAEA,SAAS6B,gBAAgB,CAACN,EAAiD,EAAE;QAC3E,IAAI,CAACnC,QAAQ,IAAIC,QAAQ,EACvB,6CAAA;QACA,OAAA;QAEF,MAAMgD,MAAM,GAAG3C,OAAO,CAACc,OAAO,AAA9B;QACA,IAAI,CAAC6B,MAAM,EACT,OAAA;QAEF,+CAAA;QACA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,cAAc,EAAE,AAAxC;QACA,MAAMC,CAAC,GAAGjB,EAAE,CAACkB,OAAO,AAApB;QACA,MAAMC,CAAC,GAAGnB,EAAE,CAACoB,OAAO,AAApB;QACAL,QAAQ,CAACE,CAAC,GAAGA,CAAC,CAAdF;QACA,yDAAA;QACAA,QAAQ,CAACI,CAAC,GAAGA,CAAC,GAAI/E,CAAAA,MAAM,GAAGP,IAAI,CAAA,AAAC,CAAhCkF;QACA,MAAMM,WAAW,GAAGN,QAAQ,CAACO,eAAe,CAC1CR,MAAM,CAACS,YAAY,EAAE,CAAEC,OAAO,EAAE,CACjC,AAFD;QAGA,MAAMC,KAAK,GAAG7G,CAAAA,GAAAA,yCAAe,CAAA,CAACyG,WAAW,EAAExF,IAAI,CAAC,AAAhD;QACAgC,QAAQ,CAAC/C,CAAAA,GAAAA,yCAAY,CAAA,CAAC;mBACpB2G,KAAK;iBACLhE,GAAG;iBACHC,GAAAA;SACD,CAAC,CAAC,CAAH;KACF;IACA,MAAMgE,GAAG,GAAG1G,CAAAA,GAAAA,yCAAO,CAAA,CAAC;QAClB2G,WAAW,EAAEjD,gBAAgB;QAC7BpB,SAAS,EAAES,KAAK,CAACT,SAAS;QAC1BsE,OAAO,EAAE/F,IAAI;QACbgG,OAAO,EAAEzF,MAAM,GAAGP,IAAlBgG;KACD,CAAC,AAAF;IACA,qBAAO,iBAAC,6BAAO;;0BACb,gBAAC,iCAAW;gBAAC,KAAK,EAAErG,CAAAA,GAAAA,yCAAY,CAAA;gBAAE,MAAM,EAAEC,CAAAA,GAAAA,yCAAa,CAAA;gBAAE,GAAG,EAAE8C,UAAU;cAA5E;0BACI,iBAAC,yBAAG;gBACF,KAAK,EAAE1C,IAAI;gBACX,MAAM,EAAEO,MAAM;gBACd,GAAG,EAAE+B,OAAO;;kCAEZ,gBAAC,iCAAW;wBACV,UAAU,EAAElB,MAAM,CAACpB,IAAI;wBACvB,SAAS,EAAE,iBAAiB;wBAC5B,KAAK,EAAEI,KAAK;wBACZ,KAAK,EAAE6F,MAAM,CAACnE,KAAK,CAACoE,OAAO,CAAC,CAAC,CAAC,CAAC;wBAC/B,GAAG,EAAEtE,GAAG;wBACR,GAAG,EAAEC,GAAG;wBACR,MAAM,EAAEE,WAAW;wBACnB,SAAS,EAAEG,KAAK,CAACT,SAAS,GAAG/B,CAAAA,GAAAA,yCAAiB,CAAA;wBAC9C,IAAI,EAAEM,IAAI;sBATlB;kCAUM,gBAAC,eAAa;wBAAC,CAAC,EAAC,GAAG;wBAAC,CAAC,EAAEO,MAAM,GAAGP,IAAI;wBAAE,KAAK,EAAEA,IAAI;wBAAE,MAAM,EAAEA,IAAI;wBAAE,QAAQ,EAAC,YAAY;kCACrF,cAAA,gBAAC,8BAAQ;4BACP,KAAK,EAAEA,IAAI;4BACX,MAAM,EAAEA,IAAI;4BACZ,KAAK,EAAE;gCACLmG,eAAe,EAAG,CAAA,0BAAA,EAA4B;uCAAIjE,KAAK,CAACvB,MAAM,IAAI,EAAE;iCAAC,CAACyF,OAAO,EAAE,CAACC,GAAG,CAAC,CAACjG,KAAK,EAAEsD,KAAK,GAAK;oCACpG,MAAMC,MAAM,GAAGD,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK,KAAKxB,KAAK,CAACvB,MAAM,CAACe,MAAM,GAAG,CAAC,GAAG,EAAE,GAAIgC,KAAK,GAAIxB,CAAAA,KAAK,CAACvB,MAAM,CAACe,MAAM,GAAG,CAAC,CAAA,GAAK,GAAG,AAApH;oCACA,OAAQ,CAAA,EAAEtB,KAAM,CAAA,CAAA,EAAGuD,MAAO,CAAA,CAAA,CAAE,CAA5B;iCACD,CAAC,CAAC2C,IAAI,CAAC,IAAI,CAAE,CAAd,CAAA;6BACD;0BAAD;sBACV;kCACM,gBAAC,MAAI;wBAAC,EAAE,EAAC,UAAU;kCACjB,cAAA,gBAAC,MAAI;4BAAC,CAAC,EAAET,GAAG;4BAAE,IAAI,EAAC,OAAO;0BAAlC;sBACA;kCACM,gBAAC,UAAQ;wBAAC,EAAE,EAAC,MAAM;kCACjB,cAAA,gBAAC,MAAI;4BAAC,CAAC,EAAEA,GAAG;0BAApB;sBACA;oBACO3D,KAAK,CAACrB,OAAO,CAACC,OAAO,kBAAI,gBAAC,GAAC;wBAAC,SAAS,EAAG,CAAA,aAAA,EAAeP,MAAM,GAAGP,IAAK,CAAA,CAAA,CAAE;kCACtE,cAAA,gBAAC,CAAA,GAAA,yCAAS,CAAA;4BACR,KAAK,EAAE;gCACLe,KAAK,EAAEmB,KAAK,CAACrB,OAAO,CAACE,KAAK;gCAC1BC,KAAK,EAAEkB,KAAK,CAACrB,OAAO,CAACG,KAAK;gCAC1BC,IAAI,EAAE;oCACJQ,SAAS,EAAE,CAAC;oCACZC,MAAM,EAAEQ,KAAK,CAACT,SAAS,GAAG,CAAC;oCAC3B,GAAGS,KAAK,CAACrB,OAAO,CAACI,IAAjB;iCACD;gCACDC,GAAG,EAAE;oCACHO,SAAS,EAAE,CAAC;oCACZC,MAAM,EAAEQ,KAAK,CAACT,SAAS,GAAG,CAAC;oCAC3B,GAAGS,KAAK,CAACrB,OAAO,CAACK,GAAjB;iCACF;6BACD;4BACD,IAAI,EAAC,UAAU;4BACf,IAAI,EAAElB,IAAI;0BAFV;sBAIA;;cACV;YACK,CAACiC,QAAQ,kBAAI,gBAAC,qCAAe;gBAC5B,WAAW,EAAEqC,WAAW;gBACxB,YAAY,EAAEJ,YAAY;gBAC1B,OAAO,EAAGC,CAAAA,EAAE,GAAK;oBACf,yGAAA;oBACA,iBAAA;oBACA,OAAOlB,YAAY,IAAIkB,EAAE,CAACoC,eAAe,EAAE,CAA3C;iBACD;gBAAE,GAAG,EAAE/D,UAAU;gBAAE,UAAU,EAAEpB,MAAM,CAACpB,IAAI;gBAAE,IAAI,EAAEA,IAAI,GAAIoB,MAAM,CAACpB,IAAI,GAAG,CAAE;0BAC3E,cAAA,gBAAC,CAAA,GAAA,yCAAM,CAAA;oBAAC,MAAM,EAAEoB,MAAM,CAACT,MAAM;oBAAE,CAAC,EAAEqC,cAAc,CAACoC,CAAC;oBAAE,CAAC,EAAEpC,cAAc,CAACsC,CAAC;oBAAE,IAAI,EAAEtF,IAAI;oBAAE,UAAU,EAAEoB,MAAM,CAACpB,IAAI;kBAAlH;cACsB;;MACV,CAAZ;CACA","sources":["src/index.tsx","src/utils.ts","src/constants.ts","src/arc.ts","src/dialLines.tsx","src/thermometer.tsx","src/handle.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from '@emotion/styled';\nimport {\n  angleToPosition,\n  positionToAngle,\n  valueToAngle,\n  angleToValue,\n  merge,\n} from \"./utils\";\nimport { drawArc } from \"./arc\";\nimport { DialLines } from './dialLines';\nimport { Thermometer as ThermometerBase } from './thermometer';\nimport { Handle, DEFAULT_HANDLE_COLORS } from './handle';\nimport { HEIGHT_MULTIPLIER, THICKNESS_DIVISOR, CANVAS_WIDTH, CANVAS_HEIGHT } from './constants';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst ColorPicker = styled.canvas`\n  position: absolute;\n  z-index: -1;\n  visibility: hidden;\n`;\n\ninterface HandleContainerProps {\n  size: number;\n  handleSize: number;\n}\n\nconst HandleContainer = styled.div<HandleContainerProps>`\n  position: absolute;\n  z-index: 3;\n  bottom: 0;\n  left: 0;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  margin-bottom: -${props => props.handleSize -3}px;\n  margin-left: -${props => props.handleSize}px;\n`;\n\n\nconst Thermometer = styled(ThermometerBase)<{\n  color: string;\n  handleSize: number;\n}>`\n  color: ${props => props.color};\n  font-family: \"Kanit\", sans-serif;\n  font-weight: 100;\n`;\n\ninterface GradientProps {\n  width: number;\n  height: number;\n}\nconst Gradient = styled.div<GradientProps>`\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n`;\n\nconst Arc = styled.svg`\n  position: relative;\n`;\n\nconst HANDLE_DEFAULTS = {\n  colors: DEFAULT_HANDLE_COLORS\n}\nconst TRACK_DEFAULTS = {\n  colors: ['#cfac48', '#cd5401'],\n  markers: {\n    enabled: true,\n    every: 5,\n    count: 60,\n    main: {\n      color: 'black'\n    },\n    sub: {\n      color: 'rgba(0,0,0,0.8)'\n    }\n  }\n}\n\nexport interface HandleColors {\n  handle?: string;\n  icon?: string;\n  pulse?: string;\n}\n\nexport interface HandleProps {\n  size?: number;\n  colors?: HandleColors;\n}\n\ninterface TrackProps {\n  colors?: string[];\n  thickness?: number;\n  markers?: {\n    enabled?: boolean;\n    every?: number;\n    count?: number;\n    main?: {\n      color?: string;\n      length?: number;\n      thickness?: number;\n    };\n    sub?: {\n      color?: string;\n      length?: number;\n      thickness?: number;\n    }\n  }\n}\n\ninterface ThermostatProps {\n  size?: number;\n  min?: number;\n  max?: number;\n  value: number;\n  valueSuffix?: string;\n  onChange: (value: number) => void;\n  handle?: HandleProps;\n  disabled?: boolean;\n  track?: TrackProps;\n};\n\nexport function Thermostat({\n  size = 200,\n  min = 0,\n  max = 100,\n  value,\n  valueSuffix,\n  handle: handleInput,\n  track: trackInput,\n  onChange,\n  disabled,\n}: ThermostatProps) {\n  const handle = merge({\n    ...HANDLE_DEFAULTS,\n    size: size / 15\n  }, handleInput || {});\n  const track = merge({\n    ...TRACK_DEFAULTS,\n    thickness: size / 10,\n  }, trackInput || {});\n  const _svgRef = useRef<SVGSVGElement>(null);\n  const _handleRef = useRef<HTMLDivElement>(null)\n  const _canvasRef = useRef<HTMLCanvasElement>(null);\n  const [color, setColor] = useState('transparent');\n  const trackInnerRadius = size / 2 - track.thickness;\n  const thermoOffset = (track.thickness + (track.thickness / THICKNESS_DIVISOR));\n  const height = size * HEIGHT_MULTIPLIER + thermoOffset;\n  const handleAngle = valueToAngle({\n    value,\n    min,\n    max,\n  });\n  const handlePosition = angleToPosition(\n    handleAngle,\n    trackInnerRadius + track.thickness / 2,\n    size\n  );\n  const controllable = !disabled && Boolean(onChange);\n\n  useEffect(() => {\n    const canvasRef = _canvasRef.current;\n    if (canvasRef) {\n      const ctx = canvasRef.getContext('2d');\n      if (ctx) {\n        const gradient = ctx.createLinearGradient(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        track.colors?.forEach((color, index) => {\n          const offset = index === 0 ? 0.2 : index === track.colors.length - 1 ? 0.8 : (index / (track.colors.length - 1));\n          gradient.addColorStop(offset, color)\n        });\n        ctx.fillStyle = gradient;\n        ctx.rect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        ctx.fill();\n      }\n    }\n  }, [track.colors]);\n\n  useEffect(() => {\n    getColourFromValue();\n  }, [value, track.colors]);\n\n  if (value < min || value > max) {\n    throw new Error(`\"value\" should be between ${min} and ${max}`);\n  }\n\n  function onMouseEnter(ev: React.MouseEvent<HTMLDivElement>) {\n    if (ev.buttons === 1) {\n      // The left mouse button is pressed, act as though user clicked us\n      onMouseDown(ev);\n    }\n  };\n\n  function onMouseDown(ev: React.MouseEvent<HTMLDivElement>) {\n    const handleRef = _handleRef.current;\n    if (handleRef) {\n      handleRef.addEventListener(\"mousemove\", processSelection);\n      handleRef.addEventListener(\"mouseleave\", removeMouseListeners);\n      handleRef.addEventListener(\"mouseup\", removeMouseListeners);\n    }\n    processSelection(ev);\n  };\n\n  function removeMouseListeners() {\n    const handleRef = _handleRef.current;\n    if (handleRef) {\n      handleRef.removeEventListener(\"mousemove\", processSelection);\n      handleRef.removeEventListener(\"mouseleave\", removeMouseListeners);\n      handleRef.removeEventListener(\"mouseup\", removeMouseListeners);\n    }\n  };\n\n  function getColourFromValue() {\n    const canvasRef = _canvasRef.current;\n    if (canvasRef) {\n      const ctx = canvasRef.getContext('2d');\n      // input value percentage between min and max\n      if (ctx) {\n        const percent = ((value - min) * 100) / (max - min);\n        const scaling = (CANVAS_WIDTH - 1) * percent / 100;\n        const v = ctx.getImageData(scaling, 1, 1, 1).data; \n        setColor(`rgb(${v[0]},${v[1]},${v[2]})`);\n      }\n    }\n  }\n\n  function processSelection(ev: React.MouseEvent<HTMLDivElement> | MouseEvent) {\n    if (!onChange || disabled) {\n      // Read-only, don't bother doing calculations\n      return;\n    }\n    const svgRef = _svgRef.current;\n    if (!svgRef) {\n      return;\n    }\n    // Find the coordinates with respect to the SVG\n    const svgPoint = svgRef.createSVGPoint();\n    const x = ev.clientX;\n    const y = ev.clientY;\n    svgPoint.x = x;\n    // offset the Y by the size of the thermometer difference\n    svgPoint.y = y - (height - size);\n    const coordsInSvg = svgPoint.matrixTransform(\n      svgRef.getScreenCTM()!.inverse()\n    );\n    const angle = positionToAngle(coordsInSvg, size);\n    onChange(angleToValue({\n      angle,\n      min,\n      max,\n    }));\n  };\n  const arc = drawArc({\n    innerRadius: trackInnerRadius,\n    thickness: track.thickness,\n    svgSize: size,\n    yOffset: height - size,\n  });\n  return <Wrapper>\n    <ColorPicker width={CANVAS_WIDTH} height={CANVAS_HEIGHT} ref={_canvasRef}></ColorPicker>\n    <Arc\n      width={size}\n      height={height}\n      ref={_svgRef}\n    >\n      <Thermometer\n        handleSize={handle.size}\n        textColor={'rgba(0,0,0,0.9)'}\n        color={color}\n        value={Number(value.toFixed(0))} \n        min={min}\n        max={max}\n        suffix={valueSuffix}\n        thickness={track.thickness / THICKNESS_DIVISOR}\n        size={size} />\n      <foreignObject x=\"0\" y={height - size} width={size} height={size} clipPath=\"url(#clip)\">\n        <Gradient \n          width={size}\n          height={size}\n          style={{\n            backgroundImage: `conic-gradient(from 0deg, ${[...track.colors || []].reverse().map((color, index) => {\n              const offset = index === 0 ? 20 : index === track.colors.length - 1 ? 80 : (index / (track.colors.length - 1)) * 100;\n              return `${color} ${offset}%`;\n            }).join(', ')}`\n          }} />\n      </foreignObject>\n      <mask id=\"arc-mask\">\n        <path d={arc} fill=\"white\" />\n      </mask>\n      <clipPath id=\"clip\">\n        <path d={arc} />\n      </clipPath>\n      {track.markers.enabled && <g transform={`translate(0, ${height - size})`}>\n        <DialLines\n          ticks={{\n            every: track.markers.every,\n            count: track.markers.count,\n            main: {\n              thickness: 2,\n              length: track.thickness / 4,\n              ...track.markers.main\n            },\n            sub: {\n              thickness: 1,\n              length: track.thickness / 8,\n              ...track.markers.sub\n            }\n          }}\n          mask=\"arc-mask\"\n          size={size}\n          />\n      </g>}\n    </Arc>\n    {!disabled && <HandleContainer\n      onMouseDown={onMouseDown}\n      onMouseEnter={onMouseEnter}\n      onClick={(ev) => {\n        // we could determine how close we are to the track here and only allow events when they're closer to the\n        // arc, later job\n        return controllable && ev.stopPropagation()\n      }} ref={_handleRef} handleSize={handle.size} size={size + (handle.size * 2)}>\n      <Handle colors={handle.colors} x={handlePosition.x} y={handlePosition.y} size={size} handleSize={handle.size} />\n    </HandleContainer>}\n  </Wrapper>\n}\n","import { START_ANGLE, END_ANGLE } from \"./constants\";\n\n\nexport function angleToValue(params: {\n  angle: number;\n  min: number;\n  max: number;\n}) {\n  const { angle, min, max } = params;\n  if (angle < START_ANGLE) {\n    return min;\n  } else if (angle > END_ANGLE) {\n    return max;\n  } else {\n    const ratio = (angle - START_ANGLE) / (END_ANGLE - START_ANGLE);\n    const value = ratio * (max - min) + min;\n    return value;\n  }\n}\n\nexport function valueToAngle(params: {\n  value: number;\n  min: number;\n  max: number;\n}) {\n  const { value, min, max } = params;\n  const ratio = (value - min) / (max - min);\n  const angle = ratio * (END_ANGLE - START_ANGLE) + START_ANGLE;\n  return angle;\n}\n\nexport function angleToPosition(\n  degree: number,\n  radius: number,\n  svgSize: number\n) {\n  // js functions need radians, counterclockwise from positive x axis\n  const angle = (90 + degree) % 360;\n  const angleInRad = (angle / 180) * Math.PI;\n  let dX: number;\n  let dY: number;\n\n  if (angleInRad <= Math.PI) {\n    // we are in the upper two quadrants\n    if (angleInRad <= Math.PI / 2) {\n      dY = Math.sin(angleInRad) * radius;\n      dX = Math.cos(angleInRad) * radius;\n    } else {\n      dY = Math.sin(Math.PI - angleInRad) * radius;\n      dX = Math.cos(Math.PI - angleInRad) * radius * -1;\n    }\n  } else {\n    // we are in the lower two quadrants\n    if (angleInRad <= Math.PI * 1.5) {\n      dY = Math.sin(angleInRad - Math.PI) * radius * -1;\n      dX = Math.cos(angleInRad - Math.PI) * radius * -1;\n    } else {\n      dY = Math.sin(2 * Math.PI - angleInRad) * radius * -1;\n      dX = Math.cos(2 * Math.PI - angleInRad) * radius;\n    }\n  }\n  // dX and dY are calculated based on having (0, 0) at the center\n  // Now, translate dX and dY to svg coordinates, where (0, 0) is at the top left\n  const x = dX + svgSize / 2;\n  const y = svgSize / 2 - dY;\n  return { x, y };\n}\n\nexport function positionToAngle(\n  position: { x: number; y: number },\n  svgSize: number,\n) {\n  const dX = position.x - svgSize / 2;\n  // position.y increases downwards in svg\n  const dY = svgSize / 2 - position.y; \n  // radians, counterclockwise from positive x axis\n  let theta = Math.atan2(dY, dX); \n  if (theta < 0) {\n    theta = theta + 2 * Math.PI;\n  }\n  // degrees, counterclockwise from positive x axis\n  const degree = (theta / Math.PI) * 180; \n  return (270 + degree) % 360;\n}\n\n\ninterface IObject {\n  [key: string]: any;\n}\n\ntype TUnionToIntersection<U> = (\n  U extends any ? (k: U) => void : never\n) extends (k: infer I) => void\n  ? I\n  : never;\n\n// istanbul ignore next\nconst isObject = (obj: any) => {\n  if (typeof obj === \"object\" && obj !== null) {\n    if (typeof Object.getPrototypeOf === \"function\") {\n      const prototype = Object.getPrototypeOf(obj);\n      return prototype === Object.prototype || prototype === null;\n    }\n    return Object.prototype.toString.call(obj) === \"[object Object]\";\n  }\n  return false;\n};\n\nexport const merge = <T extends IObject[]>(\n  ...objects: T\n): TUnionToIntersection<T[number]> =>\n  objects.reduce((result, current) => {\n    if (Array.isArray(current)) {\n      throw new TypeError(\n        \"Arguments provided to must be objects, not arrays.\"\n      );\n    }\n    Object.keys(current).forEach((key) => {\n      if ([\"__proto__\", \"constructor\", \"prototype\"].includes(key)) {\n        return;\n      }\n      if (Array.isArray(result[key]) && Array.isArray(current[key])) {\n        result[key] = current[key];\n      } else if (isObject(result[key]) && isObject(current[key])) {\n        result[key] = merge(result[key] as IObject, current[key] as IObject);\n      } else {\n        result[key] = current[key];\n      }\n    });\n    return result;\n  }, {}) as any;\n\n","export const START_ANGLE = 40;\nexport const END_ANGLE =  320;\nexport const HEIGHT_MULTIPLIER = 1.5;\nexport const THICKNESS_DIVISOR = 1.4;\nexport const CANVAS_WIDTH = 100;\nexport const CANVAS_HEIGHT = 10;","import { angleToPosition } from \"./utils\";\nimport { START_ANGLE, END_ANGLE } from \"./constants\";\n\n\n\ninterface ArcProps {\n  innerRadius: number;\n  thickness: number;\n  svgSize: number;\n  yOffset: number;\n}\n\nexport function drawArc({\n  innerRadius,\n  thickness,\n  svgSize,\n  yOffset,\n}: ArcProps) {\n  const largeArc = END_ANGLE - START_ANGLE >= 180;\n  const outerRadius = innerRadius + thickness;\n  const innerArcStart = angleToPosition(\n    START_ANGLE,\n    innerRadius,\n    svgSize\n  );\n  const startPoint = `\n    M ${innerArcStart.x},${innerArcStart.y + yOffset}\n  `;\n  const innerArcEnd = angleToPosition(\n    END_ANGLE,\n    innerRadius,\n    svgSize\n  );\n  const innerArc = `\n    A ${innerRadius} ${innerRadius} 0\n      ${largeArc ? \"1\" : \"0\"}\n      0\n      ${innerArcEnd.x} ${innerArcEnd.y + yOffset}\n  `;\n\n  const outerArcStart = angleToPosition(\n    END_ANGLE,\n    outerRadius,\n    svgSize\n  );\n  const firstButt = `\n    A ${thickness / 2} ${thickness / 2} 0\n      ${largeArc ? \"1\" : \"0\"}\n      1\n      ${outerArcStart.x} ${outerArcStart.y + yOffset}\n  `;\n\n  const outerArcEnd = angleToPosition(\n    START_ANGLE,\n    outerRadius,\n    svgSize\n  );\n  const outerArc = `\n    A ${outerRadius} ${outerRadius} 0\n      ${largeArc ? \"1\" : \"0\"}\n      1\n      ${outerArcEnd.x} ${outerArcEnd.y + yOffset}\n  `;\n\n  const secondButt = `\n    A ${thickness / 2} ${thickness / 2} 0\n      ${largeArc ? \"1\" : \"0\"}\n      1\n      ${innerArcStart.x} ${innerArcStart.y + yOffset}\n  `;\n\n  return startPoint + innerArc + firstButt + outerArc + secondButt + \" Z\";\n}","import React from 'react';\nimport { merge } from './utils';\ninterface Tick {\n  thickness: number;\n  length: number;\n  color: string;\n  cap: 'round' | 'butt' | 'square'\n}\n\ninterface DialLinesProps {\n  size: number;\n  mask?: string | null;\n  ticks?: {\n    count?: number;\n    every?: number;\n    main?: Partial<Tick>;\n    sub?: Partial<Tick>;\n  };\n}\nconst TICK_DEFAULTS_MAIN: Tick = {\n  thickness: 3,\n  length: 7,\n  color: 'black',\n  cap: 'round'\n};\nconst TICK_DEFAULTS_SUB: Tick = {\n  thickness: 1,\n  length: 4,\n  color: 'black',\n  cap: 'round'\n};\nconst TICK_DEFAULTS = {\n  count: 48,\n  every: 4,\n  main: TICK_DEFAULTS_MAIN,\n  sub: TICK_DEFAULTS_SUB\n};\n\nexport function DialLines({\n  size,\n  mask = null,\n  ticks = TICK_DEFAULTS,\n}: DialLinesProps & {\n  size: number;\n}) {\n\n  const radius = size / 2;\n  const {\n    count,\n    every,\n    sub,\n    main\n  } = merge(TICK_DEFAULTS, ticks);\n  return (\n    <g mask={mask ? `url(#${mask})` : undefined}>\n      {\n        Array(count).fill(undefined).map((u, i) => {\n          const cos = Math.cos(2 * Math.PI / count * i);\n          const sin = Math.sin(2 * Math.PI / count * i);\n          const isMain = i % every === 0;\n          const {\n            color,\n            length,\n            thickness,\n            cap\n          } = isMain ? main : sub;\n          return (\n            <line\n              key={i}\n              stroke={color}\n              strokeWidth={thickness}\n              strokeLinecap={cap}\n              x1={cos * radius + radius}\n              y1={sin * radius + radius}\n              x2={cos * (radius - length) + radius}\n              y2={sin * (radius - length) + radius}\n            />\n          );\n        })\n      }\n    </g>\n  );\n}","import React from 'react';\n\nimport { HEIGHT_MULTIPLIER } from './constants';\n\ninterface ThermometerProps {\n  min: number;\n  max: number;\n  value: number;\n  size: number;\n  thickness?: number;\n  className?: string;\n  textColor?: string;\n  suffix?: string;\n}\nexport function Thermometer({\n  min,\n  max,\n  value,\n  size,\n  thickness = 20,\n  className,\n  suffix\n}: ThermometerProps) {\n  const height = size * HEIGHT_MULTIPLIER;\n  const center = size / 2;\n  // calculate the size of the main bottom circle based on the input size\n  const circleSize = (size - (thickness * 4.5)) / 2;\n  const radius = circleSize / 2;\n  // input value percentage between min and max\n  const percent = ((value - min) * 100) / (max - min);\n  // / 100 * percent\n  const fullBarHeight = (height - circleSize - radius);\n  // the minimum value the growing center should go to\n  const growingMinY = fullBarHeight - radius;\n  // the max height the growing center should go to\n  const growingMaxY = radius;\n  // animating height based on value of slider\n  const scaling = ((growingMaxY - growingMinY) * percent / 100) + growingMinY;\n  const innerCircleRadius = circleSize - (thickness * 2);\n  return <svg className={className} width={size} height={height}>\n    <mask id=\"innerMask\">\n      <rect id=\"mask-fill\" x=\"0\" y=\"0\" width={size} height={height} fill=\"white\" />\n      <circle id=\"center-circle-mask\" cx={center} cy={height - circleSize} r={circleSize - thickness}  />\n      <circle id=\"top-cap-mask\" cx={center} cy={circleSize - thickness - ((circleSize - thickness * 2) / 2)} r={(circleSize - thickness * 2) / 2} />\n      <rect id=\"inside-thermo-mask\" x={center - radius + thickness} y={radius} width={circleSize - thickness * 2} height={height - circleSize - radius} />\n    </mask>\n    <circle id=\"main-circle\" fill=\"currentColor\" cx={center} cy={height - circleSize} r={circleSize} mask=\"url(#innerMask)\" />\n    <circle id=\"top-cap\" fill=\"currentColor\" cx={center} cy={radius} r={radius} mask=\"url(#innerMask)\" />\n    <circle id=\"center-circle\" fill=\"currentColor\" cx={center} cy={height - circleSize} r={innerCircleRadius} />\n    <rect id=\"thermo-sides\" fill=\"currentColor\" x={center - radius} y={radius} width={circleSize} height={height - circleSize - radius}  mask=\"url(#innerMask)\" />\n    <text style={{\n      userSelect: 'none'\n    }} fontSize={innerCircleRadius} textAnchor=\"middle\" x={center} y={height - circleSize} dominantBaseline=\"central\" alignmentBaseline=\"central\">\n      {value}{typeof suffix !== 'undefined' ? suffix : '°'}\n    </text>\n    <g>\n      <circle id=\"growing-thermo-cap\" fill=\"currentColor\" cx={center} cy={scaling} r={(circleSize - thickness * 4) / 2} />\n      <rect id=\"growing-thermo\" fill=\"currentColor\" x={center - radius + (thickness * 2)} y={scaling} width={circleSize - thickness * 4} height={fullBarHeight - scaling} />\n    </g>\n  </svg>\n}","import React, { useEffect, useState,  useRef } from 'react';\nimport styled from '@emotion/styled';\nimport { HandleColors } from './';\n\nexport interface HandleProps {\n  x: number;\n  y: number;\n  size: number;\n  handleSize: number;\n  colors?: HandleColors;\n}\n\nconst HandleBase = styled.circle``;\nconst HandlePulse = styled.circle`\n  transform-box: fill-box;\n  transform-origin: center center;\n  animation-timing-function: ease-out;\n  animation-duration: 1500ms;\n  animation-iteration-count: infinite;\n  animation-name: pulse;\n  @keyframes pulse {\n    0% {\n      transform: scale(1.4);\n    }\n    50% {\n      transform: scale(0.8);\n    }\n    100% {\n      transform: scale(1.4);\n    }\n  }\n  \n`;\n\nexport const DEFAULT_HANDLE_COLORS = {\n  handle: '#fff',\n  icon: '#111',\n  pulse: 'rgba(0,0,0,0.3)'\n}\n\nexport function Handle({\n  x = 0,\n  y = 0,\n  size = 30,\n  handleSize = 8,\n  colors = DEFAULT_HANDLE_COLORS\n}: HandleProps) {\n  const double = handleSize * 2;\n  const _colors = {\n    ...DEFAULT_HANDLE_COLORS,\n    ...colors,\n  };\n  const ref = useRef<SVGRectElement>(null);\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [angle, setAngle] = useState(0);\n  const iconLineSpacing = handleSize / 3;\n  const halfHandle = handleSize / 2;\n  const lineThickness = 1;\n  const verticalOffset = lineThickness + ((halfHandle + (iconLineSpacing * 2)) - halfHandle);\n  const offsetToCenter = (handleSize - verticalOffset / 2);\n\n  \n\n  useEffect(() => {\n    if (ref.current && svgRef.current) {\n      const bubbleBounding = ref.current.getBoundingClientRect();\n      const svgBounding = svgRef.current.getBoundingClientRect();\n      var redX = bubbleBounding.left + bubbleBounding.width / 2;\n      var redY = bubbleBounding.top + bubbleBounding.height / 2;\n\n      var blueX = svgBounding.left + svgBounding.width / 2;\n      var blueY = svgBounding.top + svgBounding.height / 2;\n\n      var X = blueX - redX;\n      var Y = blueY - redY;\n      setAngle(Math.atan2(Y, X) + Math.PI/2);\n    }\n  }, [ref, x, handleSize, y]);\n\n  \n  return <svg ref={svgRef} width={size + double} height={size + double} viewBox={`-${handleSize} -${handleSize} ${size + double} ${size + double}`}>\n    <HandlePulse\n      r={handleSize}\n      cx={x}\n      cy={y}\n      fill={_colors.pulse}\n      fillOpacity=\"0.2\"\n    />\n    <HandleBase\n      r={handleSize}\n      cx={x}\n      cy={y}\n      fill={_colors.handle}\n    />\n    <g style={{\n      transform: `translate3d(${x - (handleSize)}px, ${y - (handleSize)}px, 0)`,\n      cursor: 'grab'\n    }}>\n      <svg width={double} height={double} viewBox={`0 0 ${double} ${double}`}>\n        <rect ref={ref} fill=\"transparent\" width={double} height={double}></rect>\n        <g style={{\n          transform: `rotate(${angle}rad)`,\n          transformOrigin: 'center center'\n        }}>\n          <rect fill={_colors.icon} x={halfHandle} y={0 + offsetToCenter} width={handleSize} height={lineThickness}></rect>\n          <rect fill={_colors.icon} x={halfHandle} y={iconLineSpacing + offsetToCenter} width={handleSize} height={lineThickness}></rect>\n          <rect fill={_colors.icon} x={halfHandle} y={iconLineSpacing * 2 + offsetToCenter} width={handleSize} height={lineThickness}></rect>\n        </g>\n      </svg>\n    </g>\n  </svg>\n}"],"names":["React","useEffect","useRef","useState","angleToPosition","positionToAngle","valueToAngle","angleToValue","merge","drawArc","DialLines","Thermometer","ThermometerBase","Handle","DEFAULT_HANDLE_COLORS","HEIGHT_MULTIPLIER","THICKNESS_DIVISOR","CANVAS_WIDTH","CANVAS_HEIGHT","Wrapper","ColorPicker","HandleContainerProps","size","handleSize","HandleContainer","props","color","GradientProps","width","height","Gradient","Arc","HANDLE_DEFAULTS","colors","TRACK_DEFAULTS","markers","enabled","every","count","main","sub","HandleColors","handle","icon","pulse","HandleProps","TrackProps","thickness","length","ThermostatProps","min","max","value","valueSuffix","onChange","disabled","track","Thermostat","handleInput","trackInput","_svgRef","SVGSVGElement","_handleRef","HTMLDivElement","_canvasRef","HTMLCanvasElement","setColor","trackInnerRadius","thermoOffset","handleAngle","handlePosition","controllable","Boolean","canvasRef","current","ctx","getContext","gradient","createLinearGradient","forEach","index","offset","addColorStop","fillStyle","rect","fill","getColourFromValue","Error","onMouseEnter","ev","MouseEvent","buttons","onMouseDown","handleRef","addEventListener","processSelection","removeMouseListeners","removeEventListener","percent","scaling","v","getImageData","data","svgRef","svgPoint","createSVGPoint","x","clientX","y","clientY","coordsInSvg","matrixTransform","getScreenCTM","inverse","angle","arc","innerRadius","svgSize","yOffset","Number","toFixed","backgroundImage","reverse","map","join","stopPropagation","START_ANGLE","END_ANGLE","params","ratio","degree","radius","angleInRad","Math","PI","dX","dY","sin","cos","position","theta","atan2","IObject","key","TUnionToIntersection","U","k","I","isObject","obj","Object","getPrototypeOf","prototype","toString","call","objects","T","reduce","result","Array","isArray","TypeError","keys","includes","ArcProps","largeArc","outerRadius","innerArcStart","startPoint","innerArcEnd","innerArc","outerArcStart","firstButt","outerArcEnd","outerArc","secondButt","Tick","cap","DialLinesProps","mask","ticks","Partial","TICK_DEFAULTS_MAIN","TICK_DEFAULTS_SUB","TICK_DEFAULTS","undefined","u","i","isMain","ThermometerProps","className","textColor","suffix","center","circleSize","fullBarHeight","growingMinY","growingMaxY","innerCircleRadius","userSelect","HandleBase","HandlePulse","double","_colors","ref","SVGRectElement","setAngle","iconLineSpacing","halfHandle","lineThickness","verticalOffset","offsetToCenter","bubbleBounding","getBoundingClientRect","svgBounding","redX","left","redY","top","blueX","blueY","X","Y","transform","cursor","transformOrigin"],"version":3,"file":"index.js.map"}