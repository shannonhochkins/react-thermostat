{"mappings":"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","sources":["src/index.tsx","src/utils.ts","src/constants.ts","src/arc.ts","src/dialLines.tsx","src/thermometer.tsx","src/handle.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from '@emotion/styled';\nimport merge from \"ts-deepmerge\";\nimport {\n  angleToPosition,\n  positionToAngle,\n  valueToAngle,\n  angleToValue,\n} from \"./utils\";\nimport { drawArc } from \"./arc\";\nimport { DialLines } from './dialLines';\nimport { Thermometer as ThermometerBase } from './thermometer';\nimport { Handle, HandleColors, DEFAULT_HANDLE_COLORS } from './handle';\nimport { HEIGHT_MULTIPLIER, THICKNESS_DIVISOR, CANVAS_WIDTH, CANVAS_HEIGHT } from './constants';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst ColorPicker = styled.canvas`\n  position: absolute;\n  z-index: -1;\n`;\n\ninterface HandleContainerProps {\n  size: number;\n  handleSize: number;\n}\n\nconst HandleContainer = styled.div<HandleContainerProps>`\n  position: absolute;\n  z-index: 3;\n  bottom: 0;\n  left: 0;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  margin-bottom: -${props => props.handleSize -3}px;\n  margin-left: -${props => props.handleSize}px;\n`;\n\n\nconst Thermometer = styled(ThermometerBase)<{\n  color: string;\n  handleSize: number;\n}>`\n  color: ${props => props.color};\n  font-family: \"Kanit\", sans-serif;\n  font-weight: 100;\n`;\n\ninterface GradientProps {\n  width: number;\n  height: number;\n}\nconst Gradient = styled.div<GradientProps>`\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n`;\n\nconst Arc = styled.svg`\n  position: relative;\n`;\n\ninterface HandleProps {\n  size?: number;\n  colors?: HandleColors;\n}\n\ninterface TrackProps {\n  colors?: string[];\n  thickness?: number;\n  markers?: {\n    enabled?: boolean;\n    every?: number;\n    count?: number;\n    main?: {\n      color?: string;\n      length?: number;\n      thickness?: number;\n    };\n    sub?: {\n      color?: string;\n      length?: number;\n      thickness?: number;\n    }\n  }\n}\n\ntype Props = {\n  size: number;\n  min: number;\n  max: number;\n  value: number;\n  onChange?: (value: number) => void;\n  handle?: HandleProps;\n  disabled?: boolean;\n  track?: TrackProps;\n};\n\nconst HANDLE_DEFAULTS = {\n  size: 20,\n  colors: DEFAULT_HANDLE_COLORS\n}\nconst TRACK_DEFAULTS = {\n  colors: ['#cfac48', '#cd5401'],\n  markers: {\n    enabled: true,\n    every: 5,\n    count: 60,\n    main: {\n      color: 'black'\n    },\n    sub: {\n      color: 'rgba(0,0,0,0.8)'\n    }\n  }\n}\n\n\nexport function Thermostat({\n  size = 200,\n  min = 0,\n  max = 100,\n  value,\n  handle: handleInput,\n  track: trackInput,\n  onChange,\n  disabled,\n}: Props) {\n  const handle = merge(HANDLE_DEFAULTS, handleInput || {});\n  const track = merge({\n    ...TRACK_DEFAULTS,\n    thickness: size / 10,\n  }, trackInput || {});\n  const _svgRef = useRef<SVGSVGElement>(null);\n  const _handleRef = useRef<HTMLDivElement>(null)\n  const _canvasRef = useRef<HTMLCanvasElement>(null);\n  const [color, setColor] = useState('transparent');\n  const trackInnerRadius = size / 2 - track.thickness;\n  const thermoOffset = (track.thickness + (track.thickness / THICKNESS_DIVISOR));\n  const height = size * HEIGHT_MULTIPLIER + thermoOffset;\n  const handleAngle = valueToAngle({\n    value,\n    min,\n    max,\n  });\n  const handlePosition = angleToPosition(\n    handleAngle,\n    trackInnerRadius + track.thickness / 2,\n    size\n  );\n  const controllable = !disabled && Boolean(onChange);\n\n  useEffect(() => {\n    const canvasRef = _canvasRef.current;\n    if (canvasRef) {\n      const ctx = canvasRef.getContext('2d');\n      if (ctx) {\n        const gradient = ctx.createLinearGradient(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        track.colors?.forEach((color, index) => {\n          const offset = index === 0 ? 0.2 : index === track.colors.length - 1 ? 0.8 : (index / (track.colors.length - 1));\n          gradient.addColorStop(offset, color)\n        });\n        ctx.fillStyle = gradient;\n        ctx.rect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        ctx.fill();\n      }\n    }\n  }, [track.colors]);\n\n  useEffect(() => {\n    getColourFromValue();\n  }, [value, track.colors]);\n\n  if (value < min || value > max) {\n    throw new Error(`\"value\" should be between ${min} and ${max}`);\n  }\n\n  function onMouseEnter(ev: React.MouseEvent<HTMLDivElement>) {\n    if (ev.buttons === 1) {\n      // The left mouse button is pressed, act as though user clicked us\n      onMouseDown(ev);\n    }\n  };\n\n  function onMouseDown(ev: React.MouseEvent<HTMLDivElement>) {\n    const handleRef = _handleRef.current;\n    if (handleRef) {\n      handleRef.addEventListener(\"mousemove\", processSelection);\n      handleRef.addEventListener(\"mouseleave\", removeMouseListeners);\n      handleRef.addEventListener(\"mouseup\", removeMouseListeners);\n    }\n    processSelection(ev);\n  };\n\n  function removeMouseListeners() {\n    const handleRef = _handleRef.current;\n    if (handleRef) {\n      handleRef.removeEventListener(\"mousemove\", processSelection);\n      handleRef.removeEventListener(\"mouseleave\", removeMouseListeners);\n      handleRef.removeEventListener(\"mouseup\", removeMouseListeners);\n    }\n  };\n\n  function getColourFromValue() {\n    const canvasRef = _canvasRef.current;\n    if (canvasRef) {\n      const ctx = canvasRef.getContext('2d');\n      // input value percentage between min and max\n      const percent = ((value - min) * 100) / (max - min);\n      const scaling = (CANVAS_WIDTH - 1) * percent / 100;\n      const v = ctx.getImageData(scaling, 1, 1, 1).data; \n      setColor(`rgb(${v[0]},${v[1]},${v[2]})`);\n    }\n  }\n\n  function processSelection(ev: React.MouseEvent<HTMLDivElement> | MouseEvent) {\n    if (!onChange || disabled) {\n      // Read-only, don't bother doing calculations\n      return;\n    }\n    const svgRef = _svgRef.current;\n    if (!svgRef) {\n      return;\n    }\n    // Find the coordinates with respect to the SVG\n    const svgPoint = svgRef.createSVGPoint();\n    const x = ev.clientX;\n    const y = ev.clientY;\n    svgPoint.x = x;\n    // offset the Y by the size of the thermometer difference\n    svgPoint.y = y - (height - size);\n    const coordsInSvg = svgPoint.matrixTransform(\n      svgRef.getScreenCTM()!.inverse()\n    );\n    const angle = positionToAngle(coordsInSvg, size);\n    onChange(angleToValue({\n      angle,\n      min,\n      max,\n    }));\n  };\n  const arc = drawArc({\n    innerRadius: trackInnerRadius,\n    thickness: track.thickness,\n    svgSize: size,\n  });\n  return <Wrapper>\n    <ColorPicker width={CANVAS_WIDTH} height={CANVAS_HEIGHT} ref={_canvasRef}></ColorPicker>\n    <Arc\n      width={size}\n      height={height}\n      ref={_svgRef}\n    >\n      <Thermometer\n        handleSize={handle.size}\n        textColor={'rgba(0,0,0,0.9)'}\n        color={color}\n        value={Number(value.toFixed(0))} \n        min={min}\n        max={max}\n        thickness={track.thickness / THICKNESS_DIVISOR}\n        size={size} />\n      <foreignObject x=\"0\" y={height - size} width={size} height={size} clipPath=\"url(#clip)\">\n        <Gradient \n          width={size}\n          height={size}\n          style={{\n            backgroundImage: `conic-gradient(from 0deg, ${[...track.colors || []].reverse().map((color, index) => {\n              const offset = index === 0 ? 20 : index === track.colors.length - 1 ? 80 : (index / (track.colors.length - 1)) * 100;\n              return `${color} ${offset}%`;\n            }).join(', ')}`\n          }} />\n      </foreignObject>\n      <mask id=\"arc-mask\">\n        <path d={arc} fill=\"white\" />\n      </mask>\n      <clipPath id=\"clip\">\n        <path d={arc} />\n      </clipPath>\n      {track.markers.enabled && <g transform={`translate(0, ${height - size})`}>\n        <DialLines\n          ticks={{\n            every: track.markers.every,\n            count: track.markers.count,\n            main: {\n              thickness: 2,\n              length: track.thickness / 4,\n              ...track.markers.main\n            },\n            sub: {\n              thickness: 1,\n              length: track.thickness / 8,\n              ...track.markers.sub\n            }\n          }}\n          mask=\"arc-mask\"\n          size={size}\n          />\n      </g>}\n    </Arc>\n    {!disabled && <HandleContainer\n      onMouseDown={onMouseDown}\n      onMouseEnter={onMouseEnter}\n      onClick={(ev) => {\n        // we could determine how close we are to the track here and only allow events when they're closer to the\n        // arc, later job\n        return controllable && ev.stopPropagation()\n      }} ref={_handleRef} handleSize={handle.size} size={size + (handle.size * 2)}>\n      <Handle colors={handle.colors} x={handlePosition.x} y={handlePosition.y} size={size} handleSize={handle.size} />\n    </HandleContainer>}\n  </Wrapper>\n}","import { START_ANGLE, END_ANGLE } from \"./constants\"\n\nexport function angleToValue(params: {\n  angle: number;\n  min: number;\n  max: number;\n}) {\n  const { angle, min, max } = params;\n  if (angle < START_ANGLE) {\n    return min;\n  } else if (angle > END_ANGLE) {\n    return max;\n  } else {\n    const ratio = (angle - START_ANGLE) / (END_ANGLE - START_ANGLE);\n    const value = ratio * (max - min) + min;\n    return value;\n  }\n}\n\nexport function valueToAngle(params: {\n  value: number;\n  min: number;\n  max: number;\n}) {\n  const { value, min, max } = params;\n  const ratio = (value - min) / (max - min);\n  const angle = ratio * (END_ANGLE - START_ANGLE) + START_ANGLE;\n  return angle;\n}\n\nexport function angleToPosition(\n  degree: number,\n  radius: number,\n  svgSize: number\n) {\n  // js functions need radians, counterclockwise from positive x axis\n  const angle = (90 + degree) % 360;\n  const angleInRad = (angle / 180) * Math.PI;\n  let dX: number;\n  let dY: number;\n\n  if (angleInRad <= Math.PI) {\n    // we are in the upper two quadrants\n    if (angleInRad <= Math.PI / 2) {\n      dY = Math.sin(angleInRad) * radius;\n      dX = Math.cos(angleInRad) * radius;\n    } else {\n      dY = Math.sin(Math.PI - angleInRad) * radius;\n      dX = Math.cos(Math.PI - angleInRad) * radius * -1;\n    }\n  } else {\n    // we are in the lower two quadrants\n    if (angleInRad <= Math.PI * 1.5) {\n      dY = Math.sin(angleInRad - Math.PI) * radius * -1;\n      dX = Math.cos(angleInRad - Math.PI) * radius * -1;\n    } else {\n      dY = Math.sin(2 * Math.PI - angleInRad) * radius * -1;\n      dX = Math.cos(2 * Math.PI - angleInRad) * radius;\n    }\n  }\n  // dX and dY are calculated based on having (0, 0) at the center\n  // Now, translate dX and dY to svg coordinates, where (0, 0) is at the top left\n  const x = dX + svgSize / 2;\n  const y = svgSize / 2 - dY;\n  return { x, y };\n}\n\nexport function positionToAngle(\n  position: { x: number; y: number },\n  svgSize: number,\n) {\n  const dX = position.x - svgSize / 2;\n  // position.y increases downwards in svg\n  const dY = svgSize / 2 - position.y; \n  // radians, counterclockwise from positive x axis\n  let theta = Math.atan2(dY, dX); \n  if (theta < 0) {\n    theta = theta + 2 * Math.PI;\n  }\n  // degrees, counterclockwise from positive x axis\n  const degree = (theta / Math.PI) * 180; \n  return (270 + degree) % 360;\n}\n","export const START_ANGLE = 40;\nexport const END_ANGLE =  320;\nexport const HEIGHT_MULTIPLIER = 1.5;\nexport const THICKNESS_DIVISOR = 1.4;\nexport const CANVAS_WIDTH = 100;\nexport const CANVAS_HEIGHT = 10;","import { angleToPosition } from \"./utils\";\nimport { START_ANGLE, END_ANGLE } from \"./constants\";\n\n\n\ninterface ArcProps {\n  innerRadius: number;\n  thickness: number;\n  svgSize: number;\n}\n\nexport function drawArc({\n  innerRadius,\n  thickness,\n  svgSize,\n}: ArcProps) {\n  const largeArc = END_ANGLE - START_ANGLE >= 180;\n  const outerRadius = innerRadius + thickness;\n  const innerArcStart = angleToPosition(\n    START_ANGLE,\n    innerRadius,\n    svgSize\n  );\n  const startPoint = `\n    M ${innerArcStart.x},${innerArcStart.y}\n  `;\n  const innerArcEnd = angleToPosition(\n    END_ANGLE,\n    innerRadius,\n    svgSize\n  );\n  const innerArc = `\n    A ${innerRadius} ${innerRadius} 0\n      ${largeArc ? \"1\" : \"0\"}\n      0\n      ${innerArcEnd.x} ${innerArcEnd.y}\n  `;\n\n  const outerArcStart = angleToPosition(\n    END_ANGLE,\n    outerRadius,\n    svgSize\n  );\n  const firstButt = `\n    A ${thickness / 2} ${thickness / 2} 0\n      ${largeArc ? \"1\" : \"0\"}\n      1\n      ${outerArcStart.x} ${outerArcStart.y}\n  `;\n\n  const outerArcEnd = angleToPosition(\n    START_ANGLE,\n    outerRadius,\n    svgSize\n  );\n  const outerArc = `\n    A ${outerRadius} ${outerRadius} 0\n      ${largeArc ? \"1\" : \"0\"}\n      1\n      ${outerArcEnd.x} ${outerArcEnd.y}\n  `;\n\n  const secondButt = `\n    A ${thickness / 2} ${thickness / 2} 0\n      ${largeArc ? \"1\" : \"0\"}\n      1\n      ${innerArcStart.x} ${innerArcStart.y}\n  `;\n\n  return startPoint + innerArc + firstButt + outerArc + secondButt + \" Z\";\n}","import React from 'react';\nimport merge from \"ts-deepmerge\";\ninterface Tick {\n  thickness: number;\n  length: number;\n  color: string;\n  cap: 'round' | 'butt' | 'square'\n}\n\ninterface DialLinesProps {\n  size: number;\n  mask?: string | null;\n  ticks?: {\n    count?: number;\n    every?: number;\n    main?: Partial<Tick>;\n    sub?: Partial<Tick>;\n  };\n}\nconst TICK_DEFAULTS_MAIN: Tick = {\n  thickness: 3,\n  length: 7,\n  color: 'black',\n  cap: 'round'\n};\nconst TICK_DEFAULTS_SUB: Tick = {\n  thickness: 1,\n  length: 4,\n  color: 'black',\n  cap: 'round'\n};\nconst TICK_DEFAULTS = {\n  count: 48,\n  every: 4,\n  main: TICK_DEFAULTS_MAIN,\n  sub: TICK_DEFAULTS_SUB\n};\n\nexport function DialLines({\n  size,\n  mask = null,\n  ticks = TICK_DEFAULTS,\n}: DialLinesProps & {\n  size: number;\n}) {\n\n  const radius = size / 2;\n  const {\n    count,\n    every,\n    sub,\n    main\n  } = merge(TICK_DEFAULTS, ticks);\n  return (\n    <g mask={mask ? `url(#${mask})` : undefined}>\n      {\n        Array(count).fill(undefined).map((u, i) => {\n          const cos = Math.cos(2 * Math.PI / count * i);\n          const sin = Math.sin(2 * Math.PI / count * i);\n          const isMain = i % every === 0;\n          const {\n            color,\n            length,\n            thickness,\n            cap\n          } = isMain ? main : sub;\n          return (\n            <line\n              key={i}\n              stroke={color}\n              strokeWidth={thickness}\n              strokeLinecap={cap}\n              x1={cos * radius + radius}\n              y1={sin * radius + radius}\n              x2={cos * (radius - length) + radius}\n              y2={sin * (radius - length) + radius}\n            />\n          );\n        })\n      }\n    </g>\n  );\n}","import React from 'react';\n\nimport { HEIGHT_MULTIPLIER } from './constants';\n\ninterface ThermometerProps {\n  min: number;\n  max: number;\n  value: number;\n  size: number;\n  thickness?: number;\n  className?: string;\n  textColor?: string;\n  suffix?: string;\n}\nexport function Thermometer({\n  min,\n  max,\n  value,\n  size,\n  thickness = 20,\n  className,\n  suffix = '°'\n}: ThermometerProps) {\n  const height = size * HEIGHT_MULTIPLIER;\n  const center = size / 2;\n  // calculate the size of the main bottom circle based on the input size\n  const circleSize = (size - (thickness * 4.5)) / 2;\n  const radius = circleSize / 2;\n  // input value percentage between min and max\n  const percent = ((value - min) * 100) / (max - min);\n  // / 100 * percent\n  const fullBarHeight = (height - circleSize - radius);\n  // the minimum value the growing center should go to\n  const growingMinY = fullBarHeight - radius;\n  // the max height the growing center should go to\n  const growingMaxY = radius;\n  // animating height based on value of slider\n  const scaling = ((growingMaxY - growingMinY) * percent / 100) + growingMinY;\n  const innerCircleRadius = circleSize - (thickness * 2);\n  return <svg className={className} width={size} height={height}>\n    <mask id=\"innerMask\">\n      <rect id=\"mask-fill\" x=\"0\" y=\"0\" width={size} height={height} fill=\"white\" />\n      <circle id=\"center-circle-mask\" cx={center} cy={height - circleSize} r={circleSize - thickness}  />\n      <circle id=\"top-cap-mask\" cx={center} cy={circleSize - thickness - ((circleSize - thickness * 2) / 2)} r={(circleSize - thickness * 2) / 2} />\n      <rect id=\"inside-thermo-mask\" x={center - radius + thickness} y={radius} width={circleSize - thickness * 2} height={height - circleSize - radius} />\n    </mask>\n    <circle id=\"main-circle\" fill=\"currentColor\" cx={center} cy={height - circleSize} r={circleSize} mask=\"url(#innerMask)\" />\n    <circle id=\"top-cap\" fill=\"currentColor\" cx={center} cy={radius} r={radius} mask=\"url(#innerMask)\" />\n    <circle id=\"center-circle\" fill=\"currentColor\" cx={center} cy={height - circleSize} r={innerCircleRadius} />\n    <rect id=\"thermo-sides\" fill=\"currentColor\" x={center - radius} y={radius} width={circleSize} height={height - circleSize - radius}  mask=\"url(#innerMask)\" />\n    <text style={{\n      userSelect: 'none'\n    }} fontSize={innerCircleRadius} textAnchor=\"middle\" x={center} y={height - circleSize} dominantBaseline=\"central\" alignmentBaseline=\"central\">\n      {value}{suffix}\n    </text>\n    <g>\n      <circle id=\"growing-thermo-cap\" fill=\"currentColor\" cx={center} cy={scaling} r={(circleSize - thickness * 4) / 2} />\n      <rect id=\"growing-thermo\" fill=\"currentColor\" x={center - radius + (thickness * 2)} y={scaling} width={circleSize - thickness * 4} height={fullBarHeight - scaling} />\n    </g>\n  </svg>\n}","import React, { useEffect, useState,  useRef } from 'react';\nimport styled from '@emotion/styled';\n\nexport interface HandleColors {\n  handle?: string;\n  icon?: string;\n  pulse?: string;\n}\n\nexport interface HandleProps {\n  x: number;\n  y: number;\n  size: number;\n  handleSize: number;\n  colors?: HandleColors;\n}\n\nconst HandleBase = styled.circle``;\nconst HandlePulse = styled.circle`\n  transform-box: fill-box;\n  transform-origin: center center;\n  animation-timing-function: ease-out;\n  animation-duration: 1500ms;\n  animation-iteration-count: infinite;\n  animation-name: pulse;\n  @keyframes pulse {\n    0% {\n      transform: scale(1.4);\n    }\n    50% {\n      transform: scale(0.8);\n    }\n    100% {\n      transform: scale(1.4);\n    }\n  }\n  \n`;\n\nexport const DEFAULT_HANDLE_COLORS = {\n  handle: '#fff',\n  icon: '#111',\n  pulse: 'rgba(0,0,0,0.3)'\n}\n\nexport function Handle({\n  x = 0,\n  y = 0,\n  size = 30,\n  handleSize = 8,\n  colors = DEFAULT_HANDLE_COLORS\n}: HandleProps) {\n  const double = handleSize * 2;\n  const _colors = {\n    ...DEFAULT_HANDLE_COLORS,\n    ...colors,\n  };\n  const ref = useRef(null);\n  const svgRef = useRef(null);\n  const [angle, setAngle] = useState(0);\n  const iconLineSpacing = handleSize / 3;\n  const halfHandle = handleSize / 2;\n  const lineThickness = 1;\n  const verticalOffset = lineThickness + ((halfHandle + (iconLineSpacing * 2)) - halfHandle);\n  const offsetToCenter = (handleSize - verticalOffset / 2);\n\n  \n\n  useEffect(() => {\n    if (ref.current && svgRef.current) {\n      const bubbleBounding = ref.current.getBoundingClientRect();\n      const svgBounding = svgRef.current.getBoundingClientRect();\n      var redX = bubbleBounding.left + bubbleBounding.width / 2;\n      var redY = bubbleBounding.top + bubbleBounding.height / 2;\n\n      var blueX = svgBounding.left + svgBounding.width / 2;\n      var blueY = svgBounding.top + svgBounding.height / 2;\n\n      var X = blueX - redX;\n      var Y = blueY - redY;\n      setAngle(Math.atan2(Y, X) + Math.PI/2);\n    }\n  }, [ref, x, handleSize, y]);\n\n  \n  return <svg ref={svgRef} width={size + double} height={size + double} viewBox={`-${handleSize} -${handleSize} ${size + double} ${size + double}`}>\n    <HandlePulse\n      r={handleSize}\n      cx={x}\n      cy={y}\n      fill={_colors.pulse}\n      fillOpacity=\"0.2\"\n    />\n    <HandleBase\n      r={handleSize}\n      cx={x}\n      cy={y}\n      fill={_colors.handle}\n    />\n    <g style={{\n      transform: `translate3d(${x - (handleSize)}px, ${y - (handleSize)}px, 0)`,\n      cursor: 'grab'\n    }}>\n      <svg width={double} height={double} viewBox={`0 0 ${double} ${double}`}>\n        <rect ref={ref} fill=\"transparent\" width={double} height={double}></rect>\n        <g style={{\n          transform: `rotate(${angle}rad)`,\n          transformOrigin: 'center center'\n        }}>\n          <rect fill={_colors.icon} x={halfHandle} y={0 + offsetToCenter} width={handleSize} height={lineThickness}></rect>\n          <rect fill={_colors.icon} x={halfHandle} y={iconLineSpacing + offsetToCenter} width={handleSize} height={lineThickness}></rect>\n          <rect fill={_colors.icon} x={halfHandle} y={iconLineSpacing * 2 + offsetToCenter} width={handleSize} height={lineThickness}></rect>\n        </g>\n      </svg>\n    </g>\n  </svg>\n}"],"names":[],"version":3,"file":"index.js.map"}